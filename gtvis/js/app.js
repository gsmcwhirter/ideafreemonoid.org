

/**
 * hasOwnProperty.
 */

var has = Object.prototype.hasOwnProperty;

/**
 * Require the given path.
 *
 * @param {String} path
 * @return {Object} exports
 * @api public
 */

function require(path, parent, orig) {
  var resolved = require.resolve(path);

  // lookup failed
  if (null == resolved) {
    orig = orig || path;
    parent = parent || 'root';
    var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
    err.path = orig;
    err.parent = parent;
    err.require = true;
    throw err;
  }

  var module = require.modules[resolved];

  // perform real require()
  // by invoking the module's
  // registered function
  if (!module.exports) {
    module.exports = {};
    module.client = module.component = true;
    module.call(this, module.exports, require.relative(resolved), module);
  }

  return module.exports;
}

/**
 * Registered modules.
 */

require.modules = {};

/**
 * Registered aliases.
 */

require.aliases = {};

/**
 * Resolve `path`.
 *
 * Lookup:
 *
 *   - PATH/index.js
 *   - PATH.js
 *   - PATH
 *
 * @param {String} path
 * @return {String} path or null
 * @api private
 */

require.resolve = function(path) {
  if (path.charAt(0) === '/') path = path.slice(1);
  var index = path + '/index.js';

  var paths = [
    path,
    path + '.js',
    path + '.json',
    path + '/index.js',
    path + '/index.json'
  ];

  for (var i = 0; i < paths.length; i++) {
    var path = paths[i];
    if (has.call(require.modules, path)) return path;
  }

  if (has.call(require.aliases, index)) {
    return require.aliases[index];
  }
};

/**
 * Normalize `path` relative to the current path.
 *
 * @param {String} curr
 * @param {String} path
 * @return {String}
 * @api private
 */

require.normalize = function(curr, path) {
  var segs = [];

  if ('.' != path.charAt(0)) return path;

  curr = curr.split('/');
  path = path.split('/');

  for (var i = 0; i < path.length; ++i) {
    if ('..' == path[i]) {
      curr.pop();
    } else if ('.' != path[i] && '' != path[i]) {
      segs.push(path[i]);
    }
  }

  return curr.concat(segs).join('/');
};

/**
 * Register module at `path` with callback `definition`.
 *
 * @param {String} path
 * @param {Function} definition
 * @api private
 */

require.register = function(path, definition) {
  require.modules[path] = definition;
};

/**
 * Alias a module definition.
 *
 * @param {String} from
 * @param {String} to
 * @api private
 */

require.alias = function(from, to) {
  if (!has.call(require.modules, from)) {
    throw new Error('Failed to alias "' + from + '", it does not exist');
  }
  require.aliases[to] = from;
};

/**
 * Return a require function relative to the `parent` path.
 *
 * @param {String} parent
 * @return {Function}
 * @api private
 */

require.relative = function(parent) {
  var p = require.normalize(parent, '..');

  /**
   * lastIndexOf helper.
   */

  function lastIndexOf(arr, obj) {
    var i = arr.length;
    while (i--) {
      if (arr[i] === obj) return i;
    }
    return -1;
  }

  /**
   * The relative require() itself.
   */

  function localRequire(path) {
    var resolved = localRequire.resolve(path);
    return require(resolved, parent, path);
  }

  /**
   * Resolve relative to the parent.
   */

  localRequire.resolve = function(path) {
    var c = path.charAt(0);
    if ('/' == c) return path.slice(1);
    if ('.' == c) return require.normalize(p, path);

    // resolve deps by returning
    // the dep in the nearest "deps"
    // directory
    var segs = parent.split('/');
    var i = lastIndexOf(segs, 'deps') + 1;
    if (!i) i = 0;
    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
    return path;
  };

  /**
   * Check if module is defined at `path`.
   */

  localRequire.exists = function(path) {
    return has.call(require.modules, localRequire.resolve(path));
  };

  return localRequire;
};
require.register("visionmedia-page.js/index.js", Function("exports, require, module",
"\n;(function(){\n\n  /**\n   * Perform initial dispatch.\n   */\n\n  var dispatch = true;\n\n  /**\n   * Base path.\n   */\n\n  var base = '';\n\n  /**\n   * Running flag.\n   */\n\n  var running;\n\n  /**\n   * Register `path` with callback `fn()`,\n   * or route `path`, or `page.start()`.\n   *\n   *   page(fn);\n   *   page('*', fn);\n   *   page('/user/:id', load, user);\n   *   page('/user/' + user.id, { some: 'thing' });\n   *   page('/user/' + user.id);\n   *   page();\n   *\n   * @param {String|Function} path\n   * @param {Function} fn...\n   * @api public\n   */\n\n  function page(path, fn) {\n    // <callback>\n    if ('function' == typeof path) {\n      return page('*', path);\n    }\n\n    // route <path> to <callback ...>\n    if ('function' == typeof fn) {\n      var route = new Route(path);\n      for (var i = 1; i < arguments.length; ++i) {\n        page.callbacks.push(route.middleware(arguments[i]));\n      }\n    // show <path> with [state]\n    } else if ('string' == typeof path) {\n      page.show(path, fn);\n    // start [options]\n    } else {\n      page.start(path);\n    }\n  }\n\n  /**\n   * Callback functions.\n   */\n\n  page.callbacks = [];\n\n  /**\n   * Get or set basepath to `path`.\n   *\n   * @param {String} path\n   * @api public\n   */\n\n  page.base = function(path){\n    if (0 == arguments.length) return base;\n    base = path;\n  };\n\n  /**\n   * Bind with the given `options`.\n   *\n   * Options:\n   *\n   *    - `click` bind to click events [true]\n   *    - `popstate` bind to popstate [true]\n   *    - `dispatch` perform initial dispatch [true]\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  page.start = function(options){\n    options = options || {};\n    if (running) return;\n    running = true;\n    if (false === options.dispatch) dispatch = false;\n    if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);\n    if (false !== options.click) window.addEventListener('click', onclick, false);\n    if (!dispatch) return;\n    page.replace(location.pathname + location.search, null, true, dispatch);\n  };\n\n  /**\n   * Unbind click and popstate event handlers.\n   *\n   * @api public\n   */\n\n  page.stop = function(){\n    running = false;\n    removeEventListener('click', onclick, false);\n    removeEventListener('popstate', onpopstate, false);\n  };\n\n  /**\n   * Show `path` with optional `state` object.\n   *\n   * @param {String} path\n   * @param {Object} state\n   * @param {Boolean} dispatch\n   * @return {Context}\n   * @api public\n   */\n\n  page.show = function(path, state, dispatch){\n    var ctx = new Context(path, state);\n    if (false !== dispatch) page.dispatch(ctx);\n    if (!ctx.unhandled) ctx.pushState();\n    return ctx;\n  };\n\n  /**\n   * Replace `path` with optional `state` object.\n   *\n   * @param {String} path\n   * @param {Object} state\n   * @return {Context}\n   * @api public\n   */\n\n  page.replace = function(path, state, init, dispatch){\n    var ctx = new Context(path, state);\n    ctx.init = init;\n    if (null == dispatch) dispatch = true;\n    if (dispatch) page.dispatch(ctx);\n    ctx.save();\n    return ctx;\n  };\n\n  /**\n   * Dispatch the given `ctx`.\n   *\n   * @param {Object} ctx\n   * @api private\n   */\n\n  page.dispatch = function(ctx){\n    var i = 0;\n\n    function next() {\n      var fn = page.callbacks[i++];\n      if (!fn) return unhandled(ctx);\n      fn(ctx, next);\n    }\n\n    next();\n  };\n\n  /**\n   * Unhandled `ctx`. When it's not the initial\n   * popstate then redirect. If you wish to handle\n   * 404s on your own use `page('*', callback)`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n\n  function unhandled(ctx) {\n    if (window.location.pathname + window.location.search == ctx.canonicalPath) return;\n    page.stop();\n    ctx.unhandled = true;\n    window.location = ctx.canonicalPath;\n  }\n\n  /**\n   * Initialize a new \"request\" `Context`\n   * with the given `path` and optional initial `state`.\n   *\n   * @param {String} path\n   * @param {Object} state\n   * @api public\n   */\n\n  function Context(path, state) {\n    if ('/' == path[0] && 0 != path.indexOf(base)) path = base + path;\n    var i = path.indexOf('?');\n    this.canonicalPath = path;\n    this.path = path.replace(base, '') || '/';\n    this.title = document.title;\n    this.state = state || {};\n    this.state.path = path;\n    this.querystring = ~i ? path.slice(i + 1) : '';\n    this.pathname = ~i ? path.slice(0, i) : path;\n    this.params = [];\n  }\n\n  /**\n   * Expose `Context`.\n   */\n\n  page.Context = Context;\n\n  /**\n   * Push state.\n   *\n   * @api private\n   */\n\n  Context.prototype.pushState = function(){\n    history.pushState(this.state, this.title, this.canonicalPath);\n  };\n\n  /**\n   * Save the context state.\n   *\n   * @api public\n   */\n\n  Context.prototype.save = function(){\n    history.replaceState(this.state, this.title, this.canonicalPath);\n  };\n\n  /**\n   * Initialize `Route` with the given HTTP `path`,\n   * and an array of `callbacks` and `options`.\n   *\n   * Options:\n   *\n   *   - `sensitive`    enable case-sensitive routes\n   *   - `strict`       enable strict matching for trailing slashes\n   *\n   * @param {String} path\n   * @param {Object} options.\n   * @api private\n   */\n\n  function Route(path, options) {\n    options = options || {};\n    this.path = path;\n    this.method = 'GET';\n    this.regexp = pathtoRegexp(path\n      , this.keys = []\n      , options.sensitive\n      , options.strict);\n  }\n\n  /**\n   * Expose `Route`.\n   */\n\n  page.Route = Route;\n\n  /**\n   * Return route middleware with\n   * the given callback `fn()`.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   * @api public\n   */\n\n  Route.prototype.middleware = function(fn){\n    var self = this;\n    return function(ctx, next){\n      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);\n      next();\n    }\n  };\n\n  /**\n   * Check if this route matches `path`, if so\n   * populate `params`.\n   *\n   * @param {String} path\n   * @param {Array} params\n   * @return {Boolean}\n   * @api private\n   */\n\n  Route.prototype.match = function(path, params){\n    var keys = this.keys\n      , qsIndex = path.indexOf('?')\n      , pathname = ~qsIndex ? path.slice(0, qsIndex) : path\n      , m = this.regexp.exec(pathname);\n\n    if (!m) return false;\n\n    for (var i = 1, len = m.length; i < len; ++i) {\n      var key = keys[i - 1];\n\n      var val = 'string' == typeof m[i]\n        ? decodeURIComponent(m[i])\n        : m[i];\n\n      if (key) {\n        params[key.name] = undefined !== params[key.name]\n          ? params[key.name]\n          : val;\n      } else {\n        params.push(val);\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Normalize the given path string,\n   * returning a regular expression.\n   *\n   * An empty array should be passed,\n   * which will contain the placeholder\n   * key names. For example \"/user/:id\" will\n   * then contain [\"id\"].\n   *\n   * @param  {String|RegExp|Array} path\n   * @param  {Array} keys\n   * @param  {Boolean} sensitive\n   * @param  {Boolean} strict\n   * @return {RegExp}\n   * @api private\n   */\n\n  function pathtoRegexp(path, keys, sensitive, strict) {\n    if (path instanceof RegExp) return path;\n    if (path instanceof Array) path = '(' + path.join('|') + ')';\n    path = path\n      .concat(strict ? '' : '/?')\n      .replace(/\\/\\(/g, '(?:/')\n      .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?/g, function(_, slash, format, key, capture, optional){\n        keys.push({ name: key, optional: !! optional });\n        slash = slash || '';\n        return ''\n          + (optional ? '' : slash)\n          + '(?:'\n          + (optional ? slash : '')\n          + (format || '') + (capture || (format && '([^/.]+?)' || '([^/]+?)')) + ')'\n          + (optional || '');\n      })\n      .replace(/([\\/.])/g, '\\\\$1')\n      .replace(/\\*/g, '(.*)');\n    return new RegExp('^' + path + '$', sensitive ? '' : 'i');\n  };\n\n  /**\n   * Handle \"populate\" events.\n   */\n\n  function onpopstate(e) {\n    if (e.state) {\n      var path = e.state.path;\n      page.replace(path, e.state);\n    }\n  }\n\n  /**\n   * Handle \"click\" events.\n   */\n\n  function onclick(e) {\n    if (1 != which(e)) return;\n    if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n    if (e.defaultPrevented) return;\n\n    // ensure link\n    var el = e.target;\n    while (el && 'A' != el.nodeName) el = el.parentNode;\n    if (!el || 'A' != el.nodeName) return;\n\n    // ensure non-hash\n    var href = el.href;\n    var path = el.pathname + el.search;\n    if (el.hash || '#' == el.getAttribute('href')) return;\n\n    // check target\n    if (el.target) return;\n\n    // x-origin\n    if (!sameOrigin(href)) return;\n\n    // same page\n    var orig = path;\n    path = path.replace(base, '');\n    if (base && orig == path) return;\n\n    e.preventDefault();\n    page.show(orig);\n  }\n\n  /**\n   * Event button.\n   */\n\n  function which(e) {\n    e = e || window.event;\n    return null == e.which\n      ? e.button\n      : e.which;\n  }\n\n  /**\n   * Check if `href` is the same origin.\n   */\n\n  function sameOrigin(href) {\n    var origin = location.protocol + '//' + location.hostname;\n    if (location.port) origin += ':' + location.port;\n    return 0 == href.indexOf(origin);\n  }\n\n  /**\n   * Expose `page`.\n   */\n\n  if ('undefined' == typeof module) {\n    window.page = page;\n  } else {\n    module.exports = page;\n  }\n\n})();\n//@ sourceURL=visionmedia-page.js/index.js"
));
require.register("component-classes/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar index = require('indexof');\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function(el){\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function(name){\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function(name){\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function(re){\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function(name){\n  // classList\n  if (this.list) {\n    this.list.toggle(name);\n    return this;\n  }\n\n  // fallback\n  if (this.has(name)) {\n    this.remove(name);\n  } else {\n    this.add(name);\n  }\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function(){\n  var arr = this.el.className.split(re);\n  if ('' === arr[0]) arr.pop();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has =\nClassList.prototype.contains = function(name){\n  return this.list\n    ? this.list.contains(name)\n    : !! ~index(this.array(), name);\n};\n//@ sourceURL=component-classes/index.js"
));
require.register("gsmcwhirter-booting-sub-nav/index.js", Function("exports, require, module",
"var classes = require('classes');\nvar scroll = require('./scroll');\n\nfunction getTop(element) {\n    var box = element.getBoundingClientRect();\n    var clientTop  = document.documentElement.clientTop  || document.body.clientTop  || 0;\n    var scrollTop  = scroll.scrollTop();\n    return box.top  + scrollTop  - clientTop;\n};\n\nfunction getLeft(element){\n    var box = element.getBoundingClientRect();\n    var clientLeft = document.documentElement.clientLeft || document.body.clientLeft || 0;\n    return box.left - clientLeft;\n};\n\nfunction getWidth(element){\n    var box = element.getBoundingClientRect();\n    return box.width;\n}\n\nmodule.exports = subnav;\nfunction subnav(element, offset, cls) {\n    if (!cls && typeof offset === 'string') {\n        cls = offset;\n        offset = 0;\n    }\n    offset = offset || 0;\n    cls = cls || 'navbar-fixed-top';\n    var dataTop = getTop(element);\n    classes(element).add('booting-sub-nav');\n    scroll.onScroll(function(){\n        if (dataTop - offset <= scroll.scrollTop()) {\n            if (!element.style.left){\n              element.style.left = getLeft(element) + 'px';\n              element.style.width = getWidth(element) + 'px';\n            }\n            classes(element).add(cls);\n        } else {\n            classes(element).remove(cls);\n            element.style.left = '';\n            element.style.width = '';\n        }\n    });\n}\n//@ sourceURL=gsmcwhirter-booting-sub-nav/index.js"
));
require.register("gsmcwhirter-booting-sub-nav/scroll.js", Function("exports, require, module",
"var prefix = \"\", _addEventListener, support;\n\n// detect event model\nif (window.addEventListener) {\n    _addEventListener = \"addEventListener\";\n} else {\n    _addEventListener = \"attachEvent\";\n    prefix = \"on\";\n}\n\n// detect available wheel event\nif (document.onmousewheel !== undefined) {\n    // Webkit and IE support at least \"mousewheel\"\n    support = \"mousewheel\"\n}\ntry {\n    // Modern browsers support \"wheel\"\n    WheelEvent(\"wheel\");\n    support = \"wheel\";\n} catch (e) {}\nif (!support) {\n    // let's assume that remaining browsers are older Firefox\n    support = \"DOMMouseScroll\";\n}\n\nmodule.exports.onScroll = function (callback) {\n    window[_addEventListener](prefix  + 'scroll', callback, false);\n    window[_addEventListener](prefix + 'gesturechange', callback, false);\n    window[_addEventListener](prefix + support, callback, false);\n    // handle MozMousePixelScroll in older Firefox\n    if (support == \"DOMMouseScroll\") {\n        window[_addEventListener](prefix + 'MozMousePixelScroll', callback, false);\n    }\n};\n\nif (window.pageYOffset !== undefined) {\n    module.exports.scrollTop = function () {\n        return window.pageYOffset;\n    };\n} else {\n    module.exports.scrollTop = function () {\n        return (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    };\n}//@ sourceURL=gsmcwhirter-booting-sub-nav/scroll.js"
));
require.register("component-inherit/index.js", Function("exports, require, module",
"\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};//@ sourceURL=component-inherit/index.js"
));
require.register("component-cookie/index.js", Function("exports, require, module",
"/**\n * Encode.\n */\n\nvar encode = encodeURIComponent;\n\n/**\n * Decode.\n */\n\nvar decode = decodeURIComponent;\n\n/**\n * Set or get cookie `name` with `value` and `options` object.\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {Mixed}\n * @api public\n */\n\nmodule.exports = function(name, value, options){\n  switch (arguments.length) {\n    case 3:\n    case 2:\n      return set(name, value, options);\n    case 1:\n      return get(name);\n    default:\n      return all();\n  }\n};\n\n/**\n * Set cookie `name` to `value`.\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @api private\n */\n\nfunction set(name, value, options) {\n  options = options || {};\n  var str = encode(name) + '=' + encode(value);\n\n  if (null == value) options.maxage = -1;\n\n  if (options.maxage) {\n    options.expires = new Date(+new Date + options.maxage);\n  }\n\n  if (options.path) str += '; path=' + options.path;\n  if (options.domain) str += '; domain=' + options.domain;\n  if (options.expires) str += '; expires=' + options.expires.toUTCString();\n  if (options.secure) str += '; secure';\n\n  document.cookie = str;\n}\n\n/**\n * Return all cookies.\n *\n * @return {Object}\n * @api private\n */\n\nfunction all() {\n  return parse(document.cookie);\n}\n\n/**\n * Get cookie `name`.\n *\n * @param {String} name\n * @return {String}\n * @api private\n */\n\nfunction get(name) {\n  return all()[name];\n}\n\n/**\n * Parse cookie `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parse(str) {\n  var obj = {};\n  var pairs = str.split(/ *; */);\n  var pair;\n  if ('' == pairs[0]) return obj;\n  for (var i = 0; i < pairs.length; ++i) {\n    pair = pairs[i].split('=');\n    obj[decode(pair[0])] = decode(pair[1]);\n  }\n  return obj;\n}\n//@ sourceURL=component-cookie/index.js"
));
require.register("component-json/index.js", Function("exports, require, module",
"\nmodule.exports = 'undefined' == typeof JSON\n  ? require('json-fallback')\n  : JSON;\n//@ sourceURL=component-json/index.js"
));
require.register("component-json-fallback/index.js", Function("exports, require, module",
"/*\n    json2.js\n    2011-10-19\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    See http://www.JSON.org/js.html\n\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n\n\n    This file creates a global JSON object containing two methods: stringify\n    and parse.\n\n        JSON.stringify(value, replacer, space)\n            value       any JavaScript value, usually an object or array.\n\n            replacer    an optional parameter that determines how object\n                        values are stringified for objects. It can be a\n                        function or an array of strings.\n\n            space       an optional parameter that specifies the indentation\n                        of nested structures. If it is omitted, the text will\n                        be packed without extra whitespace. If it is a number,\n                        it will specify the number of spaces to indent at each\n                        level. If it is a string (such as '\\t' or '&nbsp;'),\n                        it contains the characters used to indent at each level.\n\n            This method produces a JSON text from a JavaScript value.\n\n            When an object value is found, if the object contains a toJSON\n            method, its toJSON method will be called and the result will be\n            stringified. A toJSON method does not serialize: it returns the\n            value represented by the name/value pair that should be serialized,\n            or undefined if nothing should be serialized. The toJSON method\n            will be passed the key associated with the value, and this will be\n            bound to the value\n\n            For example, this would serialize Dates as ISO strings.\n\n                Date.prototype.toJSON = function (key) {\n                    function f(n) {\n                        // Format integers to have at least two digits.\n                        return n < 10 ? '0' + n : n;\n                    }\n\n                    return this.getUTCFullYear()   + '-' +\n                         f(this.getUTCMonth() + 1) + '-' +\n                         f(this.getUTCDate())      + 'T' +\n                         f(this.getUTCHours())     + ':' +\n                         f(this.getUTCMinutes())   + ':' +\n                         f(this.getUTCSeconds())   + 'Z';\n                };\n\n            You can provide an optional replacer method. It will be passed the\n            key and value of each member, with this bound to the containing\n            object. The value that is returned from your method will be\n            serialized. If your method returns undefined, then the member will\n            be excluded from the serialization.\n\n            If the replacer parameter is an array of strings, then it will be\n            used to select the members to be serialized. It filters the results\n            such that only members with keys listed in the replacer array are\n            stringified.\n\n            Values that do not have JSON representations, such as undefined or\n            functions, will not be serialized. Such values in objects will be\n            dropped; in arrays they will be replaced with null. You can use\n            a replacer function to replace those with JSON values.\n            JSON.stringify(undefined) returns undefined.\n\n            The optional space parameter produces a stringification of the\n            value that is filled with line breaks and indentation to make it\n            easier to read.\n\n            If the space parameter is a non-empty string, then that string will\n            be used for indentation. If the space parameter is a number, then\n            the indentation will be that many spaces.\n\n            Example:\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}]);\n            // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\n            // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n            text = JSON.stringify([new Date()], function (key, value) {\n                return this[key] instanceof Date ?\n                    'Date(' + this[key] + ')' : value;\n            });\n            // text is '[\"Date(---current time---)\"]'\n\n\n        JSON.parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = JSON.parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n            myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n                var d;\n                if (typeof value === 'string' &&\n                        value.slice(0, 5) === 'Date(' &&\n                        value.slice(-1) === ')') {\n                    d = new Date(value.slice(5, -1));\n                    if (d) {\n                        return d;\n                    }\n                }\n                return value;\n            });\n\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n*/\n\n/*jslint evil: true, regexp: true */\n\n/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\n    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\n\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nvar JSON = {};\n\n(function () {\n    'use strict';\n\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10 ? '0' + n : n;\n    }\n\n    if (typeof Date.prototype.toJSON !== 'function') {\n\n        Date.prototype.toJSON = function (key) {\n\n            return isFinite(this.valueOf())\n                ? this.getUTCFullYear()     + '-' +\n                    f(this.getUTCMonth() + 1) + '-' +\n                    f(this.getUTCDate())      + 'T' +\n                    f(this.getUTCHours())     + ':' +\n                    f(this.getUTCMinutes())   + ':' +\n                    f(this.getUTCSeconds())   + 'Z'\n                : null;\n        };\n\n        String.prototype.toJSON      =\n            Number.prototype.toJSON  =\n            Boolean.prototype.toJSON = function (key) {\n                return this.valueOf();\n            };\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string'\n                ? c\n                : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            mind = gap,\n            partial,\n            value = holder[key];\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === 'object' &&\n                typeof value.toJSON === 'function') {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n            if (!value) {\n                return 'null';\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0\n                    ? '[]'\n                    : gap\n                    ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                    : '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    if (typeof rep[i] === 'string') {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0\n                ? '{}'\n                : gap\n                ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n                : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== 'function') {\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = '';\n            indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                    typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n            return str('', {'': value});\n        };\n    }\n\n\n// If the JSON object does not yet have a parse method, give it one.\n\n    if (typeof JSON.parse !== 'function') {\n        JSON.parse = function (text, reviver) {\n\n// The parse method takes a text and an optional reviver function, and returns\n// a JavaScript value if the text is a valid JSON text.\n\n            var j;\n\n            function walk(holder, key) {\n\n// The walk method is used to recursively walk the resulting structure so\n// that modifications can be made.\n\n                var k, v, value = holder[key];\n                if (value && typeof value === 'object') {\n                    for (k in value) {\n                        if (Object.prototype.hasOwnProperty.call(value, k)) {\n                            v = walk(value, k);\n                            if (v !== undefined) {\n                                value[k] = v;\n                            } else {\n                                delete value[k];\n                            }\n                        }\n                    }\n                }\n                return reviver.call(holder, key, value);\n            }\n\n\n// Parsing happens in four stages. In the first stage, we replace certain\n// Unicode characters with escape sequences. JavaScript handles many characters\n// incorrectly, either silently deleting them, or treating them as line endings.\n\n            text = String(text);\n            cx.lastIndex = 0;\n            if (cx.test(text)) {\n                text = text.replace(cx, function (a) {\n                    return '\\\\u' +\n                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n                });\n            }\n\n// In the second stage, we run the text against regular expressions that look\n// for non-JSON patterns. We are especially concerned with '()' and 'new'\n// because they can cause invocation, and '=' because it can cause mutation.\n// But just to be safe, we want to reject all unexpected forms.\n\n// We split the second stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n// replace all simple value tokens with ']' characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or ']' or\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n            if (/^[\\],:{}\\s]*$/\n                    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n                        .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n                        .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n\n// In the third stage we use the eval function to compile the text into a\n// JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n// in JavaScript: it can begin a block or an object literal. We wrap the text\n// in parens to eliminate the ambiguity.\n\n                j = eval('(' + text + ')');\n\n// In the optional fourth stage, we recursively walk the new structure, passing\n// each name/value pair to a reviver function for possible transformation.\n\n                return typeof reviver === 'function'\n                    ? walk({'': j}, '')\n                    : j;\n            }\n\n// If the text is not JSON parseable, then a SyntaxError is thrown.\n\n            throw new SyntaxError('JSON.parse');\n        };\n    }\n}());\n\nmodule.exports = JSON//@ sourceURL=component-json-fallback/index.js"
));
require.register("gsmcwhirter-storage/index.js", Function("exports, require, module",
"var cookie = require('cookie')\n  , json = require('json')\n  , inherit = require('inherit')\n  ;\n  \nmodule.exports = AutoStorage;\n  \nfunction AutoStorage(sname){\n  var type = detectStorageType();\n  return new type(sname);\n}\n\nAutoStorage.MemoryStorage = Storage;\nAutoStorage.CookieStorage = CookieStorage;\nAutoStorage.LocalStorage = LocalStorage;\nAutoStorage.SessionStoreage = SessionStorage; \n\nfunction detectStorageType(no_cookies){\n  if (typeof window.localStorage === 'object'){\n    return LocalStorage;\n  }\n  \n  if (!no_cookies){\n    return CookieStorage;\n  }\n  \n  return Storage;\n}\n\nfunction Storage(sname){\n  this.storage_name = sname;\n  this.data = {};\n  this.load();\n}\n\nStorage.prototype.get = function (key){\n  return this.data[key];\n};\n\nStorage.prototype.set = function (key, val){\n  this.data[key] = val;\n  this.save();\n};\n\nStorage.prototype.save = function (){};\nStorage.prototype.load = function (){};\n\nfunction CookieStorage(sname, opts){\n  this.storage_name = sname;\n  this.data = {};\n  this.opts = opts || {path: '/', maxage: 60000};\n  this.load();\n}\ninherit(CookieStorage, Storage);\n\nCookieStorage.prototype.save = function (){\n  cookie(this.storage_name, json.stringify(this.data), this.opts);\n};\n\nCookieStorage.prototype.load = function (){\n  this.data = cookie(this.storage_name) || {};\n};\n\nfunction LocalStorage(sname){\n  this.storage_name = sname;\n  this.data = {};\n  this.load();\n}\ninherit(LocalStorage, Storage);\n\nLocalStorage.prototype.save = function (){\n  localStorage.setItem(this.storage_name, json.stringify(this.data));\n};\n\nLocalStorage.prototype.load = function (){\n  this.data = json.parse(localStorage.getItem(this.storage_name) || \"{}\");\n};\n\nfunction SessionStorage(sname){\n  this.storage_name = sname;\n  this.data = {};\n  this.load();\n}\ninherit(SessionStorage, Storage);\n\nSessionStorage.prototype.save = function (){\n  sessionStorage.setItem(this.storage_name, json.stringify(this.data));\n};\n\nSessionStorage.prototype.load = function (){\n  this.data = json.parse(sessionStorage.getItem(this.storage_name) || \"{}\");\n};\n//@ sourceURL=gsmcwhirter-storage/index.js"
));
require.register("gsmcwhirter-all/index.js", Function("exports, require, module",
"\nmodule.exports = function (iter, testFunc, context){\n  if (iter == null) return;\n\n  if (typeof testFunc !== \"function\"){\n    testFunc = function (item){\n      return item; //tests general truthiness\n    };\n  }\n  \n  //array-like\n  if (iter.length === +iter.length) {\n    for (var i = 0, l = iter.length; i < l; i++) {\n      if (testFunc.call(context, iter[i], i, iter)){\n        //pass\n      }\n      else {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n  //object-like \n  else {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        if (iterator.call(context, obj[key], key, obj)){\n          //pass\n        }\n        else {\n          return false;\n        }\n      }\n    }\n    \n    return true;\n  }\n  \n};\n//@ sourceURL=gsmcwhirter-all/index.js"
));
require.register("segmentio-extend/index.js", Function("exports, require, module",
"\nmodule.exports = function extend (object) {\n    // Takes an unlimited number of extenders.\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    // For each extender, copy their properties on our object.\n    for (var i = 0, source; source = args[i]; i++) {\n        if (!source) continue;\n        for (var property in source) {\n            object[property] = source[property];\n        }\n    }\n\n    return object;\n};//@ sourceURL=segmentio-extend/index.js"
));
require.register("gsmcwhirter-dynamics/index.js", Function("exports, require, module",
"module.exports = {\n  ContinuousReplicatorPath: require(\"./continuous\")\n, DiscreteReplicatorPath: require(\"./discrete\")\n, BestResponsePath: require(\"./bestresponse\")\n, BestResponseCurves: require(\"./brcurves\")\n, ContinuousReplicatorVector: require(\"./vectors\")\n, util: require(\"./util\")\n};\n//@ sourceURL=gsmcwhirter-dynamics/index.js"
));
require.register("gsmcwhirter-dynamics/util.js", Function("exports, require, module",
"module.exports = {\n  payoff: payoff\n, avg_payoff: avg_payoff\n, dxydt: dxydt\n, dxdt: dxdt\n, dydt: dydt\n};\n\n//Payoff for player \"typ\" (1=row, 0=col) playing strategy \"str\" against the population\nfunction payoff(str, typ, pops, game){\n  game = game || this.game || {};\n  var opp = 1-typ\n    , opp0 = pops[opp]\n    , opp1 = 1-opp0\n    , score = 0\n    ;\n  \n  if (typ == 1){ //row player\n    if (str == 0){\n      score = (game['tl-r'] || 0) * opp1 + (game['tr-r'] || 0) * opp0;\n    }\n    else if (str == 1){\n      score = (game['bl-r'] || 0) * opp1 + (game['br-r'] || 0) * opp0;\n    }\n    else {\n      throw new Error(\"Unknown str parameter value: \" + str);\n    }\n  }\n  else if (typ == 0){ //col player\n    if (str == 0){\n      score = (game['tl-c'] || 0) * opp0 + (game['bl-c'] || 0) * opp1;\n    }\n    else if (str == 1){\n      score = (game['tr-c'] || 0) * opp0 + (game['br-c'] || 0) * opp1;\n    }\n    else {\n      throw new Error(\"Unknown str parameter value: \" + str);\n    }\n  }\n  else {\n    throw new Error(\"Unknown typ parameter value: \" + typ);\n  }\n  \n  return score;\n}\n\n//Average payoff for player \"typ\" (1=row, 0=col) in the population \"pops\"\nfunction avg_payoff(typ, pops, game){\n  this.payoff = this.payoff || payoff;\n  return pops[typ] * this.payoff(1-typ, typ, pops, game) + (1 - pops[typ]) * this.payoff(typ, typ, pops, game);\n}\n\nfunction dxydt(x, y, game){\n  this.dxdt = this.dxdt || dxdt;\n  this.dydt = this.dydt || dydt;\n  \n  return [this.dxdt(x, y, game), this.dydt(x, y, game)];\n}\n\nfunction dxdt(x, y, game){\n  var pop = [x, y];\n  this.payoff = this.payoff || payoff;\n  this.avg_payoff = this.avg_payoff || avg_payoff;\n  \n  return x * (this.payoff(1, 0, pop, game) - this.avg_payoff(0, pop, game));\n}\n\nfunction dydt(x, y, game){\n  var pop = [x, y];\n  this.payoff = this.payoff || payoff;\n  this.avg_payoff = this.avg_payoff || avg_payoff;\n  \n  return y * (this.payoff(0, 1, pop, game) - this.avg_payoff(1, pop, game));\n}\n//@ sourceURL=gsmcwhirter-dynamics/util.js"
));
require.register("gsmcwhirter-dynamics/generator.js", Function("exports, require, module",
"var inherit = require(\"inherit\")\n  , Emitter = require(\"emitter\")\n  , util = require(\"./util\")\n  ;\n\nfunction Generator(game){\n  this.game = game || {};\n}\n\nmodule.exports = Generator;\n\ninherit(Generator, Emitter);\n\nGenerator.prototype.payoff = util.payoff;\nGenerator.prototype.avg_payoff = util.avg_payoff;\nGenerator.prototype.dxydt = util.dxydt;\nGenerator.prototype.dxdt = util.dxdt;\nGenerator.prototype.dydt = util.dydt;\n//@ sourceURL=gsmcwhirter-dynamics/generator.js"
));
require.register("gsmcwhirter-dynamics/continuous.js", Function("exports, require, module",
"var Generator = require(\"./generator\")\n  , inherit = require(\"inherit\")\n  , extend = require(\"extend\")\n  ;\n  \nfunction ContinuousReplicatorPath(game, start, options){\n  this.game = extend({\n    \"tl-r\": 0\n  , \"tl-c\": 0\n  , \"tr-r\": 0\n  , \"tr-c\": 0\n  , \"bl-r\": 0\n  , \"bl-c\": 0\n  , \"br-r\": 0\n  , \"br-c\": 0\n  }, game);\n  \n  this.options = extend({\n    debug: false\n  , timestep: 1e-3\n  , duration: 50\n  , interval: 0\n  }, options);\n  \n  this.start = extend({x:0, y:0}, start); //start should be an object with .x and .y for coordinate properties\n}\n\nmodule.exports = ContinuousReplicatorPath;\n\ninherit (ContinuousReplicatorPath, Generator);\n\nContinuousReplicatorPath.prototype.generate = function (){\n  \n  // This uses Runge-Kutta 4 with timestep of 1e-3 and duration 50\n  var timestep = this.options.timestep;\n  var duration = this.options.duration;\n  \n  var t = 0;\n  var self = this;\n  function next(x, y){\n    return function (){\n      if (t >= duration){\n        self.emit(\"done\");\n      }\n      else {\n        t = t + timestep;\n        \n        var x1, x2, x3, x4, y1, y2, y3, y4, dxy, xnew, ynew;\n        \n        dxy = self.dxydt(x, y);\n        \n        x1 = timestep * dxy[0];\n        y1 = timestep * dxy[1];\n        \n        y2 = timestep * self.dydt(x, y + (y1 / 2.0));\n        y3 = timestep * self.dydt(x, y + (y2 / 2.0));\n        y4 = timestep * self.dydt(x, y + y3);\n        ynew = y + (y1 + 2*y2 + 2*y3 + y4) / 6.0;\n        \n        x2 = timestep * self.dxdt(x + (y1 / 2.0), y);\n        x3 = timestep * self.dxdt(x + (y2 / 2.0), y);\n        x4 = timestep * self.dxdt(x + x3, y);\n        xnew = x + (x1 + 2*x2 + 2*x3 + x4) / 6.0;\n        \n        self.emit(\"point\", {x: xnew, y: ynew});\n        \n        if (self.options.debug){\n          console.log(\"Time %s\", t);\n          console.log(\"Dxy:\");\n          console.log(dxy);\n          console.log(\"x, y: %s, %s\", x, y);\n          console.log(\"xnew, ynew: %s, %s\", xnew, ynew);\n          console.log(\"x1, x2, x3, x4: %s, %s, %s, %s\", x1, x2, x3, x4);\n          console.log(\"y1, y2, y3, y4: %s, %s, %s, %s\", y1, y2, y3, y4);\n        }\n        \n        if ([xnew, ynew] == [x, y]) self.emit(\"done\");\n        else setTimeout(next(xnew, ynew), self.options.interval); \n      };\n    }\n  }\n  \n  setTimeout(next(this.start.x, this.start.y), 10);\n}\n//@ sourceURL=gsmcwhirter-dynamics/continuous.js"
));
require.register("gsmcwhirter-dynamics/discrete.js", Function("exports, require, module",
"var Generator = require(\"./generator\")\n  , inherit = require(\"inherit\")\n  , extend = require(\"extend\")\n  ;\n  \nfunction DiscreteReplicatorPath(game, start, options){\n  this.game = extend({\n    \"tl-r\": 0\n  , \"tl-c\": 0\n  , \"tr-r\": 0\n  , \"tr-c\": 0\n  , \"bl-r\": 0\n  , \"bl-c\": 0\n  , \"br-r\": 0\n  , \"br-c\": 0\n  }, game);\n  \n  this.start = extend({x:0, y:0}, start); //start should be an object with .x and .y for coordinate properties\n  \n  this.options = extend({\n    debug: false\n  , tolerance: 1e-5\n  , interval: 0\n  , alpha: 0.1\n  }, options);\n  \n  //adjust payoffs to be non-negative\n  var self = this;\n  var min = Math.min(this.game['tl-r'], this.game['tl-c'], this.game['tr-r'], this.game['tr-c'], this.game['bl-r'], this.game['bl-c'], this.game['br-r'], this.game['br-c']);\n  \n  if (min < 0){\n    ['tl-r', 'tl-c', 'tr-r', 'tr-c', 'bl-r', 'bl-c', 'br-r', 'br-c'].forEach(function (key){\n      self.game[key] -= min;\n    });\n  }\n}\n\nmodule.exports = DiscreteReplicatorPath;\n\ninherit(DiscreteReplicatorPath, Generator);\n\nDiscreteReplicatorPath.prototype.generate = function (){\n  var tolerance = this.options.tolerance;\n  var alpha = this.options.alpha;\n  \n  var self = this;\n  function next(x, y){\n    return function (){\n      var newx, newy;\n      \n      var avgx = self.avg_payoff(0, [x, y])\n        , avgy = self.avg_payoff(1, [x, y])\n        ;\n        \n      if (avgx == 0){\n        newx = x;\n      }\n      else {\n        newx = (alpha + self.payoff(1, 0, [x, y])) * x / (alpha + avgx);\n      }\n      \n      if (avgy == 0){\n        newy = y;\n      }\n      else {\n        newy = (alpha + self.payoff(0, 1, [x, y])) * y / (alpha + avgy);\n      }\n      \n      self.emit(\"point\", {x: newx, y: newy});\n      \n      if (Math.abs(x - newx) > tolerance || Math.abs(y - newy) > tolerance){\n        setTimeout(next(newx, newy), self.interval)\n      }\n      else {\n        self.emit(\"done\");\n      }\n    }  \n  }\n  \n  setTimeout(next(this.start.x, this.start.y), 10);\n  \n};\n//@ sourceURL=gsmcwhirter-dynamics/discrete.js"
));
require.register("gsmcwhirter-dynamics/bestresponse.js", Function("exports, require, module",
"var Generator = require(\"./generator\")\n  , inherit = require(\"inherit\")\n  , extend = require(\"extend\")\n  ;\n\nfunction BestResponsePath(game, start, options){\n  this.game = extend({\n    \"tl-r\": 0\n  , \"tl-c\": 0\n  , \"tr-r\": 0\n  , \"tr-c\": 0\n  , \"bl-r\": 0\n  , \"bl-c\": 0\n  , \"br-r\": 0\n  , \"br-c\": 0\n  }, game);\n  \n  this.A = this.game['tl-r'] - this.game['bl-r'];\n  this.B = this.game['tl-c'] - this.game['tr-c'];\n  this.C = this.game['br-r'] - this.game['tr-r'];\n  this.D = this.game['br-c'] - this.game['bl-c'];\n  \n  if (this.A + this.C > 0){\n    this.qborder =  1.0;\n  }\n  else if (this.A + this.C < 0){\n    this.qborder = 0.0;\n  }\n  else if (this.A < 0){\n    this.qborder = 0.0;\n  }\n  else if (this.A > 0){\n    this.qborder = 1.0;\n  }\n  else {\n    this.qborder = NaN;\n  }\n  \n  if (this.B + this.D > 0){\n    this.pborder =  1.0;\n  }\n  else if (this.B + this.D < 0){\n    this.pborder = 0.0;\n  }\n  else if (this.D < 0){\n    this.pborder = 0.0;\n  }\n  else if (this.D > 0){\n    this.pborder = 1.0;\n  }\n  else {\n    this.pborder = NaN;\n  }\n  \n  this.plim = this.D / (this.B + this.D);\n  this.qlim = this.A / (this.A + this.C);\n  \n  this.start = extend({x:0, y:0}, start); //start should be an object with .x and .y for coordinate properties\n  \n  this.options = extend({\n    debug: false\n  , interval: 0\n  , max_iterations: 20\n  }, options);\n}\n\nmodule.exports = BestResponsePath;\n\ninherit(BestResponsePath, Generator);\n\nBestResponsePath.prototype.generate = function (){\n\n  var iterations = 0\n    , max_iterations = this.options.max_iterations\n    , done = false\n    ;\n  \n  var self = this;\n  function next(x, y, lastx, lasty){\n    lastx = lastx || x;\n    lasty = lasty || y;\n    \n    return function (){\n      var newx, newy;\n      var skipdraw = false;\n    \n      if (done || iterations >= max_iterations){\n        self.emit(\"done\");\n      }\n      else {\n        iterations += 1;\n        \n        if (x == self.qlim && y == self.plim){\n          newx = x;\n          newy = y;\n        }\n        else if (x == self.qlim){\n          if (lastx < self.qlim){\n            newx = x + 0.00001;\n            newy = y;\n            skipdraw = true;\n          }\n          else if (lastx > self.qlim){\n            newx = x - 0.00001;\n            newy = y;\n            skipdraw = true;\n          }\n          else {\n            newx = x;\n            newy = y;\n            skipdraw = true;\n            done = true;\n          }\n        }\n        else if (y == self.plim){\n          if (lasty < self.plim){\n            newy = y + 0.00001;\n            newx = x;\n            skipdraw = true;\n          }\n          else if (lasty > self.plim){\n            newy = y - 0.00001;\n            newx = x;\n            skipdraw = true;\n          }\n          else {\n            newx = x;\n            newy = y;\n            skipdraw = true;\n            done = true;\n          }\n        }\n        else {\n          var targetx = self.getTargetPX(x, y)\n            , targety = self.getTargetQY(x, y)\n            ;\n   \n          if ((x < self.qlim && targetx > self.qlim) ||\n              (x > self.qlim && targetx < self.qlim) ||\n              (y < self.plim && targety > self.plim) ||\n              (y > self.plim && targety < self.plim)){\n            \n            if (targetx == x){\n              newx = x;\n              newy = self.plim;\n            }\n            else {\n              var m = (targety - y) / (targetx - x)\n                , b = y - m * x\n                , hitpx = (self.plim - b) / m\n                , hitpy = self.plim\n                , hitqx = self.qlim\n                , hitqy = m * self.qlim + b\n                , pdist = Math.pow(x - hitpx, 2) + Math.pow(y - hitpy, 2)\n                , qdist = Math.pow(x - hitqx, 2) + Math.pow(y - hitqy, 2)\n                //, targetdist = Math.pow(x - targetx, 2) + Math.pow(y - targety, 2)\n                , samep = ((targetx - x) * (hitpx - x) + (targety - y) * (hitpy - y)) > 0\n                , sameq = ((targetx - x) * (hitqx - x) + (targety - y) * (hitqy - y)) > 0\n                ;\n                \n                if (samep && sameq){\n                  if (pdist < qdist){\n                    newx = hitpx;\n                    newy = hitpy;\n                  }\n                  else {\n                    newx = hitqx;\n                    newy = hitqy;\n                  }\n                }\n                else if (samep){\n                  newx = hitpx;\n                  newy = hitpy;\n                }\n                else {\n                  newx = hitqx;\n                  newy = hitqy;\n                }\n            }\n          }\n          else {\n            newx = targetx;\n            newy = targety;\n          }\n        }\n        \n        if ((x == newx && y == newy) || (newx == self.start.x && newy == self.start.y)){\n          done = true;\n        }\n        \n        if (!skipdraw){\n          self.emit(\"point\", {x: newx, y: newy});\n        }\n        \n        setTimeout(next(newx, newy, x, y), self.options.interval);\n      }\n    };\n  }\n  \n  setTimeout(next(this.start.x, this.start.y), 10);\n};\n\nBestResponsePath.prototype.getTargetQY = function (x, y){\n  if (!isFinite(this.qlim)){\n    if (this.A < 0){\n      return 0.0;\n    }\n    else if (this.A > 0){\n      return 1.0;\n    }\n    else {\n      return y;\n    }\n  }\n  else if (isNaN(this.qborder)) {\n    return y;\n  }\n  else if (x < this.qlim){\n    return this.qborder;\n  }\n  else if (x > this.qlim){\n    return 1 - this.qborder;\n  }\n  else {\n    return y;\n  }\n};\n\nBestResponsePath.prototype.getTargetPX = function (x, y){\n  if (!isFinite(this.plim)){\n    if (this.D < 0){\n      return 0.0;\n    }\n    else if (this.D > 0){\n      return 1.0;\n    }\n    else {\n      return x;\n    }\n  }\n  else if (isNaN(this.pborder)) {\n    return x;\n  }\n  else if (y < this.plim){\n    return this.pborder;\n  }\n  else if (y > this.plim){\n    return 1 - this.pborder;\n  }\n  else {\n    return x;\n  }\n};\n//@ sourceURL=gsmcwhirter-dynamics/bestresponse.js"
));
require.register("gsmcwhirter-dynamics/brcurves.js", Function("exports, require, module",
"var extend = require(\"extend\");\n\nmodule.exports = function BRCurves(game, options){\n  game = extend({\n    \"tl-r\": 0\n  , \"tl-c\": 0\n  , \"tr-r\": 0\n  , \"tr-c\": 0\n  , \"bl-r\": 0\n  , \"bl-c\": 0\n  , \"br-r\": 0\n  , \"br-c\": 0\n  }, game);\n  \n  var A, B, C, D, plim, qlim;\n  var rowpath = [], colpath = [];\n  \n  A = game['tl-r'] - game['bl-r'];\n  B = game['tl-c'] - game['tr-c'];\n  C = game['br-r'] - game['tr-r'];\n  D = game['br-c'] - game['bl-c'];\n  \n  plim = D / (B + D);\n  qlim = A / (A + C);\n  \n  options = extend({\n    debug: false\n  }, options);\n\n  //row player response curve\n  if (A + C > 0){\n    if (qlim <= 1 && qlim >= 0){\n      rowpath.push({x: 0, y: 1});\n      rowpath.push({x: qlim, y: 1});\n      rowpath.push({x: qlim, y: 0});\n      rowpath.push({x: 1, y: 0});\n    } else if (qlim > 1) {\n      //play this\n      rowpath.push({x: 0, y: 1});\n      rowpath.push({x: 1, y: 1});\n    } else {\n      rowpath.push({x: 0, y: 0});\n      rowpath.push({x: 1, y: 0});\n    }\n  } \n  else if (A + C < 0){\n    if (qlim <= 1 && qlim >= 0){\n      rowpath.push({x: 0, y: 0});\n      rowpath.push({x: qlim, y: 0});\n      rowpath.push({x: qlim, y: 1});\n      rowpath.push({x: 1, y: 1});\n    } else if (qlim > 1) {\n      rowpath.push({x: 0, y: 0});\n      rowpath.push({x: 1, y: 0});\n    } else {\n      rowpath.push({x: 0, y: 1});\n      rowpath.push({x: 1, y: 1});\n    }\n  } \n  else if (A > 0) {\n    rowpath.push({x: 0, y: 1});\n    rowpath.push({x: 1, y: 1});\n  } \n  else if (A < 0) {\n    rowpath.push({x: 0, y: 0});\n    rowpath.push({x: 1, y: 0});\n  }\n\n  //column player response curve\n  if (B + D > 0){\n    if (plim >= 0 && plim <= 1){\n      colpath.push({x: 0, y: 1});\n      colpath.push({x: 0, y: plim});\n      colpath.push({x: 1, y: plim});\n      colpath.push({x: 1, y: 0});\n    } else if (plim > 1){\n      colpath.push({x: 1, y: 1});\n      colpath.push({x: 1, y: 0});\n    } else {\n      colpath.push({x: 0, y: 1});\n      colpath.push({x: 0, y: 0});\n    }\n  } \n  else if (B + D < 0){\n    if (plim >= 0 && plim <= 1){\n      colpath.push({x: 0, y: 0});\n      colpath.push({x: 0, y: plim});\n      colpath.push({x: 1, y: plim});\n      colpath.push({x: 1, y: 1});\n    } else if (plim > 1) {\n      colpath.push({x: 0, y: 1});\n      colpath.push({x: 0, y: 0});\n    } else {\n      colpath.push({x: 1, y: 1});\n      colpath.push({x: 1, y: 0});\n    }\n  } \n  else if (D > 0) {\n    colpath.push({x: 1, y: 0});\n    colpath.push({x: 1, y: 1});\n  } \n  else if (D < 0) {\n    colpath.push({x: 0, y: 0});\n    colpath.push({x: 0, y: 1});\n  }\n  \n  return [rowpath, colpath];\n};\n//@ sourceURL=gsmcwhirter-dynamics/brcurves.js"
));
require.register("gsmcwhirter-dynamics/vectors.js", Function("exports, require, module",
"var Generator = require(\"./generator\")\n  , inherit = require(\"inherit\")\n  , extend = require(\"extend\")\n  ;\n  \nfunction ContinuousReplicatorVector(game, start, options){\n  this.game = extend({\n    \"tl-r\": 0\n  , \"tl-c\": 0\n  , \"tr-r\": 0\n  , \"tr-c\": 0\n  , \"bl-r\": 0\n  , \"bl-c\": 0\n  , \"br-r\": 0\n  , \"br-c\": 0\n  }, game);\n  \n  this.options = extend({\n    debug: false\n  }, options);\n  \n  this.start = extend({x:0, y:0}, start); //start should be an object with .x and .y for coordinate properties\n}\n\nmodule.exports = ContinuousReplicatorVector;\n\ninherit(ContinuousReplicatorVector, Generator);\n\nContinuousReplicatorVector.prototype.generate = function (){\n  var dxy = this.dxydt(this.start.x, this.start.y);\n  \n  this.emit(\"point\", {x: this.start.x + dxy[0], y: this.start.y + dxy[1]});\n  this.emit(\"done\");\n};\n//@ sourceURL=gsmcwhirter-dynamics/vectors.js"
));

require.register("component-type/index.js", Function("exports, require, module",
"\n/**\n * toString ref.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Return the type of `val`.\n *\n * @param {Mixed} val\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(val){\n  switch (toString.call(val)) {\n    case '[object Function]': return 'function';\n    case '[object Date]': return 'date';\n    case '[object RegExp]': return 'regexp';\n    case '[object Arguments]': return 'arguments';\n    case '[object Array]': return 'array';\n    case '[object String]': return 'string';\n  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n  if (val === Object(val)) return 'object';\n\n  return typeof val;\n};\n//@ sourceURL=component-type/index.js"
));
require.register("component-clone/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar type;\n\ntry {\n  type = require('type');\n} catch(e){\n  type = require('type-component');\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = clone;\n\n/**\n * Clones objects.\n *\n * @param {Mixed} any object\n * @api public\n */\n\nfunction clone(obj){\n  switch (type(obj)) {\n    case 'object':\n      var copy = {};\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          copy[key] = clone(obj[key]);\n        }\n      }\n      return copy;\n\n    case 'array':\n      var copy = new Array(obj.length);\n      for (var i = 0, l = obj.length; i < l; i++) {\n        copy[i] = clone(obj[i]);\n      }\n      return copy;\n\n    case 'regexp':\n      // from millermedeiros/amd-utils - MIT\n      var flags = '';\n      flags += obj.multiline ? 'm' : '';\n      flags += obj.global ? 'g' : '';\n      flags += obj.ignoreCase ? 'i' : '';\n      return new RegExp(obj.source, flags);\n\n    case 'date':\n      return new Date(obj.getTime());\n\n    default: // string, number, boolean, …\n      return obj;\n  }\n}\n//@ sourceURL=component-clone/index.js"
));

require.register("component-matches-selector/index.js", Function("exports, require, module",
"\n/**\n * Element prototype.\n */\n\nvar proto = Element.prototype;\n\n/**\n * Vendor function.\n */\n\nvar vendor = proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\n/**\n * Expose `match()`.\n */\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; ++i) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}//@ sourceURL=component-matches-selector/index.js"
));
require.register("component-delegate/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar matches = require('matches-selector')\n  , event = require('event');\n\n/**\n * Delegate event `type` to `selector`\n * and invoke `fn(e)`. A callback function\n * is returned which may be passed to `.unbind()`.\n *\n * @param {Element} el\n * @param {String} selector\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function(el, selector, type, fn, capture){\n  return event.bind(el, type, function(e){\n    if (matches(e.target, selector)) fn.call(el, e);\n  }, capture);\n};\n\n/**\n * Unbind event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  event.unbind(el, type, fn, capture);\n};\n//@ sourceURL=component-delegate/index.js"
));
require.register("component-domify/index.js", Function("exports, require, module",
"\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  option: [1, '<select multiple=\"multiple\">', '</select>'],\n  optgroup: [1, '<select multiple=\"multiple\">', '</select>'],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  thead: [1, '<table>', '</table>'],\n  tbody: [1, '<table>', '</table>'],\n  tfoot: [1, '<table>', '</table>'],\n  colgroup: [1, '<table>', '</table>'],\n  caption: [1, '<table>', '</table>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n  th: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  _default: [0, '', '']\n};\n\n/**\n * Parse `html` and return the children.\n *\n * @param {String} html\n * @return {Array}\n * @api private\n */\n\nfunction parse(html) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n  \n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) throw new Error('No elements were generated.');\n  var tag = m[1];\n  \n  // body support\n  if (tag == 'body') {\n    var el = document.createElement('html');\n    el.innerHTML = html;\n    return [el.removeChild(el.lastChild)];\n  }\n  \n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = document.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  return orphan(el.children);\n}\n\n/**\n * Orphan `els` and return an array.\n *\n * @param {NodeList} els\n * @return {Array}\n * @api private\n */\n\nfunction orphan(els) {\n  var ret = [];\n\n  while (els.length) {\n    ret.push(els[0].parentNode.removeChild(els[0]));\n  }\n\n  return ret;\n}\n//@ sourceURL=component-domify/index.js"
));
require.register("component-css/index.js", Function("exports, require, module",
"\n/**\n * Properties to ignore appending \"px\".\n */\n\nvar ignore = {\n  columnCount: true,\n  fillOpacity: true,\n  fontWeight: true,\n  lineHeight: true,\n  opacity: true,\n  orphans: true,\n  widows: true,\n  zIndex: true,\n  zoom: true\n};\n\n/**\n * Set `el` css values.\n *\n * @param {Element} el\n * @param {Object} obj\n * @return {Element}\n * @api public\n */\n\nmodule.exports = function(el, obj){\n  for (var key in obj) {\n    var val = obj[key];\n    if ('number' == typeof val && !ignore[key]) val += 'px';\n    el.style[key] = val;\n  }\n  return el;\n};\n//@ sourceURL=component-css/index.js"
));
require.register("component-sort/index.js", Function("exports, require, module",
"\n/**\n * Expose `sort`.\n */\n\nexports = module.exports = sort;\n\n/**\n * Sort `el`'s children with the given `fn(a, b)`.\n *\n * @param {Element} el\n * @param {Function} fn\n * @api public\n */\n\nfunction sort(el, fn) {\n  var arr = [].slice.call(el.children).sort(fn);\n  var frag = document.createDocumentFragment();\n  for (var i = 0; i < arr.length; i++) {\n    frag.appendChild(arr[i]);\n  }\n  el.appendChild(frag);\n};\n\n/**\n * Sort descending.\n *\n * @param {Element} el\n * @param {Function} fn\n * @api public\n */\n\nexports.desc = function(el, fn){\n  sort(el, function(a, b){\n    return ~fn(a, b) + 1;\n  });\n};\n\n/**\n * Sort ascending.\n */\n\nexports.asc = sort;\n//@ sourceURL=component-sort/index.js"
));
require.register("component-dom/index.js", Function("exports, require, module",
"/**\n * Module dependencies.\n */\n\nvar domify = require('domify')\n  , classes = require('classes')\n  , indexof = require('indexof')\n  , delegate = require('delegate')\n  , events = require('event')\n  , type = require('type')\n  , css = require('css')\n\n/**\n * Attributes supported.\n */\n\nvar attrs = [\n  'id',\n  'src',\n  'rel',\n  'cols',\n  'rows',\n  'name',\n  'href',\n  'title',\n  'style',\n  'width',\n  'height',\n  'tabindex',\n  'placeholder'\n];\n\n/**\n * Expose `dom()`.\n */\n\nexports = module.exports = dom;\n\n/**\n * Expose supported attrs.\n */\n\nexports.attrs = attrs;\n\n/**\n * Return a dom `List` for the given\n * `html`, selector, or element.\n *\n * @param {String|Element|List}\n * @return {List}\n * @api public\n */\n\nfunction dom(selector, context) {\n  // array\n  if (Array.isArray(selector)) {\n    return new List(selector);\n  }\n\n  // List\n  if (selector instanceof List) {\n    return selector;\n  }\n\n  // node\n  if (selector.nodeName) {\n    return new List([selector]);\n  }\n\n  if ('string' != typeof selector) {\n    throw new TypeError('invalid selector');\n  }\n\n  // html\n  if ('<' == selector.charAt(0)) {\n    return new List([domify(selector)[0]], selector);\n  }\n\n  // selector\n  var ctx = context\n    ? (context.els ? context.els[0] : context)\n    : document;\n\n  return new List(ctx.querySelectorAll(selector), selector);\n}\n\n/**\n * Expose `List` constructor.\n */\n\nexports.List = List;\n\n/**\n * Initialize a new `List` with the\n * given array-ish of `els` and `selector`\n * string.\n *\n * @param {Mixed} els\n * @param {String} selector\n * @api private\n */\n\nfunction List(els, selector) {\n  this.els = els || [];\n  this.selector = selector;\n}\n\n/**\n * Remove elements from the DOM.\n *\n * @api public\n */\n\nList.prototype.remove = function(){\n  for (var i = 0; i < this.els.length; i++) {\n    var el = this.els[i];\n    var parent = el.parentNode;\n    if (parent) parent.removeChild(el);\n  }\n};\n\n/**\n * Set attribute `name` to `val`, or get attr `name`.\n *\n * @param {String} name\n * @param {String} [val]\n * @return {String|List} self\n * @api public\n */\n\nList.prototype.attr = function(name, val){\n  if (1 == arguments.length) {\n    return this.els[0] && this.els[0].getAttribute(name);\n  }\n\n  return this.forEach(function(el){\n    el.setAttribute(name, val);\n  });\n};\n\n/**\n * Set property `name` to `val`, or get property `name`.\n *\n * @param {String} name\n * @param {String} [val]\n * @return {Object|List} self\n * @api public\n */\n\nList.prototype.prop = function(name, val){\n  if (1 == arguments.length) {\n    return this.els[0] && this.els[0][name];\n  }\n\n  return this.forEach(function(el){\n    el[name] = val;\n  });\n};\n\n/**\n * Return a cloned `List` with all elements cloned.\n *\n * @return {List}\n * @api public\n */\n\nList.prototype.clone = function(){\n  var arr = [];\n  for (var i = 0, len = this.els.length; i < len; ++i) {\n    arr.push(this.els[i].cloneNode(true));\n  }\n  return new List(arr);\n};\n\n/**\n * Prepend `val`.\n *\n * @param {String|Element|List} val\n * @return {List} new list\n * @api public\n */\n\nList.prototype.prepend = function(val){\n  var el = this.els[0];\n  if (!el) return this;\n  val = dom(val);\n  for (var i = 0; i < val.els.length; ++i) {\n    if (el.children.length) {\n      el.insertBefore(val.els[i], el.firstChild);\n    } else {\n      el.appendChild(val.els[i]);\n    }\n  }\n  return val;\n};\n\n/**\n * Append `val`.\n *\n * @param {String|Element|List} val\n * @return {List} new list\n * @api public\n */\n\nList.prototype.append = function(val){\n  var el = this.els[0];\n  if (!el) return this;\n  val = dom(val);\n  for (var i = 0; i < val.els.length; ++i) {\n    el.appendChild(val.els[i]);\n  }\n  return val;\n};\n\n/**\n * Append self's `el` to `val`\n *\n * @param {String|Element|List} val\n * @return {List} self\n * @api public\n */\n\nList.prototype.appendTo = function(val){\n  dom(val).append(this);\n  return this;\n};\n\n/**\n * Return a `List` containing the element at `i`.\n *\n * @param {Number} i\n * @return {List}\n * @api public\n */\n\nList.prototype.at = function(i){\n  return new List([this.els[i]], this.selector);\n};\n\n/**\n * Return a `List` containing the first element.\n *\n * @param {Number} i\n * @return {List}\n * @api public\n */\n\nList.prototype.first = function(){\n  return new List([this.els[0]], this.selector);\n};\n\n/**\n * Return a `List` containing the last element.\n *\n * @param {Number} i\n * @return {List}\n * @api public\n */\n\nList.prototype.last = function(){\n  return new List([this.els[this.els.length - 1]], this.selector);\n};\n\n/**\n * Return an `Element` at `i`.\n *\n * @param {Number} i\n * @return {Element}\n * @api public\n */\n\nList.prototype.get = function(i){\n  return this.els[i || 0];\n};\n\n/**\n * Return list length.\n *\n * @return {Number}\n * @api public\n */\n\nList.prototype.length = function(){\n  return this.els.length;\n};\n\n/**\n * Return element text.\n *\n * @param {String} str\n * @return {String|List}\n * @api public\n */\n\nList.prototype.text = function(str){\n  // TODO: real impl\n  if (1 == arguments.length) {\n    this.forEach(function(el){\n      el.textContent = str;\n    });\n    return this;\n  }\n\n  var str = '';\n  for (var i = 0; i < this.els.length; ++i) {\n    str += this.els[i].textContent;\n  }\n  return str;\n};\n\n/**\n * Return element html.\n *\n * @return {String} html\n * @api public\n */\n\nList.prototype.html = function(html){\n  if (1 == arguments.length) {\n    this.forEach(function(el){\n      el.innerHTML = html;\n    });\n  }\n  // TODO: real impl\n  return this.els[0] && this.els[0].innerHTML;\n};\n\n/**\n * Bind to `event` and invoke `fn(e)`. When\n * a `selector` is given then events are delegated.\n *\n * @param {String} event\n * @param {String} [selector]\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {List}\n * @api public\n */\n\nList.prototype.on = function(event, selector, fn, capture){\n  if ('string' == typeof selector) {\n    for (var i = 0; i < this.els.length; ++i) {\n      fn._delegate = delegate.bind(this.els[i], selector, event, fn, capture);\n    }\n    return this;\n  }\n\n  capture = fn;\n  fn = selector;\n\n  for (var i = 0; i < this.els.length; ++i) {\n    events.bind(this.els[i], event, fn, capture);\n  }\n\n  return this;\n};\n\n/**\n * Unbind to `event` and invoke `fn(e)`. When\n * a `selector` is given then delegated event\n * handlers are unbound.\n *\n * @param {String} event\n * @param {String} [selector]\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {List}\n * @api public\n */\n\nList.prototype.off = function(event, selector, fn, capture){\n  if ('string' == typeof selector) {\n    for (var i = 0; i < this.els.length; ++i) {\n      // TODO: add selector support back\n      delegate.unbind(this.els[i], event, fn._delegate, capture);\n    }\n    return this;\n  }\n\n  capture = fn;\n  fn = selector;\n\n  for (var i = 0; i < this.els.length; ++i) {\n    events.unbind(this.els[i], event, fn, capture);\n  }\n  return this;\n};\n\n/**\n * Iterate elements and invoke `fn(list, i)`.\n *\n * @param {Function} fn\n * @return {List} self\n * @api public\n */\n\nList.prototype.each = function(fn){\n  for (var i = 0; i < this.els.length; ++i) {\n    fn(new List([this.els[i]], this.selector), i);\n  }\n  return this;\n};\n\n/**\n * Iterate elements and invoke `fn(el, i)`.\n *\n * @param {Function} fn\n * @return {List} self\n * @api public\n */\n\nList.prototype.forEach = function(fn){\n  for (var i = 0; i < this.els.length; ++i) {\n    fn(this.els[i], i);\n  }\n  return this;\n};\n\n/**\n * Map elements invoking `fn(list, i)`.\n *\n * @param {Function} fn\n * @return {Array}\n * @api public\n */\n\nList.prototype.map = function(fn){\n  var arr = [];\n  for (var i = 0; i < this.els.length; ++i) {\n    arr.push(fn(new List([this.els[i]], this.selector), i));\n  }\n  return arr;\n};\n\n/**\n * Filter elements invoking `fn(list, i)`, returning\n * a new `List` of elements when a truthy value is returned.\n *\n * @param {Function} fn\n * @return {List}\n * @api public\n */\n\nList.prototype.select =\nList.prototype.filter = function(fn){\n  var el;\n  var list = new List([], this.selector);\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    if (fn(new List([el], this.selector), i)) list.els.push(el);\n  }\n  return list;\n};\n\n/**\n * Add the given class `name`.\n *\n * @param {String} name\n * @return {List} self\n * @api public\n */\n\nList.prototype.addClass = function(name){\n  var el;\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    el._classes.add(name);\n  }\n  return this;\n};\n\n/**\n * Remove the given class `name`.\n *\n * @param {String|RegExp} name\n * @return {List} self\n * @api public\n */\n\nList.prototype.removeClass = function(name){\n  var el;\n\n  if ('regexp' == type(name)) {\n    for (var i = 0; i < this.els.length; ++i) {\n      el = this.els[i];\n      el._classes = el._classes || classes(el);\n      var arr = el._classes.array();\n      for (var j = 0; j < arr.length; j++) {\n        if (name.test(arr[j])) {\n          el._classes.remove(arr[j]);\n        }\n      }\n    }\n    return this;\n  }\n\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    el._classes.remove(name);\n  }\n\n  return this;\n};\n\n/**\n * Toggle the given class `name`,\n * optionally a `bool` may be given\n * to indicate that the class should\n * be added when truthy.\n *\n * @param {String} name\n * @param {Boolean} bool\n * @return {List} self\n * @api public\n */\n\nList.prototype.toggleClass = function(name, bool){\n  var el;\n  var fn = 'toggle';\n\n  // toggle with boolean\n  if (2 == arguments.length) {\n    fn = bool ? 'add' : 'remove';\n  }\n\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    el._classes[fn](name);\n  }\n\n  return this;\n};\n\n/**\n * Check if the given class `name` is present.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nList.prototype.hasClass = function(name){\n  var el;\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    el._classes = el._classes || classes(el);\n    if (el._classes.has(name)) return true;\n  }\n  return false;\n};\n\n/**\n * Set CSS `prop` to `val` or get `prop` value.\n * Also accepts an object (`prop`: `val`)\n *\n * @param {String} prop\n * @param {Mixed} val\n * @return {List|String}\n * @api public\n */\n\nList.prototype.css = function(prop, val){\n  if (2 == arguments.length) {\n    var obj = {};\n    obj[prop] = val;\n    return this.setStyle(obj);\n  }\n\n  if ('object' == type(prop)) {\n    return this.setStyle(prop);\n  }\n\n  return this.getStyle(prop);\n};\n\n/**\n * Set CSS `props`.\n *\n * @param {Object} props\n * @return {List} self\n * @api private\n */\n\nList.prototype.setStyle = function(props){\n  for (var i = 0; i < this.els.length; ++i) {\n    css(this.els[i], props);\n  }\n  return this;\n};\n\n/**\n * Get CSS `prop` value.\n *\n * @param {String} prop\n * @return {String}\n * @api private\n */\n\nList.prototype.getStyle = function(prop){\n  var el = this.els[0];\n  if (el) return el.style[prop];\n};\n\n/**\n * Find children matching the given `selector`.\n *\n * @param {String} selector\n * @return {List}\n * @api public\n */\n\nList.prototype.find = function(selector){\n  // TODO: real implementation\n  var list = new List([], this.selector);\n  var el, els;\n  for (var i = 0; i < this.els.length; ++i) {\n    el = this.els[i];\n    els = el.querySelectorAll(selector);\n    for (var j = 0; j < els.length; ++j) {\n      list.els.push(els[j]);\n    }\n  }\n  return list;\n};\n\n/**\n * Attribute accessors.\n */\n\nattrs.forEach(function(name){\n  List.prototype[name] = function(val){\n    if (0 == arguments.length) return this.attr(name);\n    return this.attr(name, val);\n  };\n});\n\n//@ sourceURL=component-dom/index.js"
));
require.register("component-event/index.js", Function("exports, require, module",
"\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function(el, type, fn, capture){\n  if (el.addEventListener) {\n    el.addEventListener(type, fn, capture || false);\n  } else {\n    el.attachEvent('on' + type, fn);\n  }\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  if (el.removeEventListener) {\n    el.removeEventListener(type, fn, capture || false);\n  } else {\n    el.detachEvent('on' + type, fn);\n  }\n  return fn;\n};\n//@ sourceURL=component-event/index.js"
));
require.register("component-each/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar type = require('type');\n\n/**\n * HOP reference.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Iterate the given `obj` and invoke `fn(val, i)`.\n *\n * @param {String|Array|Object} obj\n * @param {Function} fn\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  switch (type(obj)) {\n    case 'array':\n      return array(obj, fn);\n    case 'object':\n      if ('number' == typeof obj.length) return array(obj, fn);\n      return object(obj, fn);\n    case 'string':\n      return string(obj, fn);\n  }\n};\n\n/**\n * Iterate string chars.\n *\n * @param {String} obj\n * @param {Function} fn\n * @api private\n */\n\nfunction string(obj, fn) {\n  for (var i = 0; i < obj.length; ++i) {\n    fn(obj.charAt(i), i);\n  }\n}\n\n/**\n * Iterate object keys.\n *\n * @param {Object} obj\n * @param {Function} fn\n * @api private\n */\n\nfunction object(obj, fn) {\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Iterate array-ish.\n *\n * @param {Array|Object} obj\n * @param {Function} fn\n * @api private\n */\n\nfunction array(obj, fn) {\n  for (var i = 0; i < obj.length; ++i) {\n    fn(obj[i], i);\n  }\n}//@ sourceURL=component-each/index.js"
));
require.register("component-to-function/index.js", Function("exports, require, module",
"\n/**\n * Expose `toFunction()`.\n */\n\nmodule.exports = toFunction;\n\n/**\n * Convert `obj` to a `Function`.\n *\n * @param {Mixed} obj\n * @return {Function}\n * @api private\n */\n\nfunction toFunction(obj) {\n  switch ({}.toString.call(obj)) {\n    case '[object Object]':\n      return objectToFunction(obj);\n    case '[object Function]':\n      return obj;\n    case '[object String]':\n      return stringToFunction(obj);\n    case '[object RegExp]':\n      return regexpToFunction(obj);\n    default:\n      return defaultToFunction(obj);\n  }\n}\n\n/**\n * Default to strict equality.\n *\n * @param {Mixed} val\n * @return {Function}\n * @api private\n */\n\nfunction defaultToFunction(val) {\n  return function(obj){\n    return val === obj;\n  }\n}\n\n/**\n * Convert `re` to a function.\n *\n * @param {RegExp} re\n * @return {Function}\n * @api private\n */\n\nfunction regexpToFunction(re) {\n  return function(obj){\n    return re.test(obj);\n  }\n}\n\n/**\n * Convert property `str` to a function.\n *\n * @param {String} str\n * @return {Function}\n * @api private\n */\n\nfunction stringToFunction(str) {\n  // immediate such as \"> 20\"\n  if (/^ *\\W+/.test(str)) return new Function('_', 'return _ ' + str);\n\n  // properties such as \"name.first\" or \"age > 18\"\n  return new Function('_', 'return _.' + str);\n}\n\n/**\n * Convert `object` to a function.\n *\n * @param {Object} object\n * @return {Function}\n * @api private\n */\n\nfunction objectToFunction(obj) {\n  var match = {}\n  for (var key in obj) {\n    match[key] = typeof obj[key] === 'string'\n      ? defaultToFunction(obj[key])\n      : toFunction(obj[key])\n  }\n  return function(val){\n    if (typeof val !== 'object') return false;\n    for (var key in match) {\n      if (!(key in val)) return false;\n      if (!match[key](val[key])) return false;\n    }\n    return true;\n  }\n}\n//@ sourceURL=component-to-function/index.js"
));
require.register("component-map/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar toFunction = require('to-function');\n\n/**\n * Map the given `arr` with callback `fn(val, i)`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function(arr, fn){\n  var ret = [];\n  fn = toFunction(fn);\n  for (var i = 0; i < arr.length; ++i) {\n    ret.push(fn(arr[i], i));\n  }\n  return ret;\n};//@ sourceURL=component-map/index.js"
));
require.register("component-select/index.js", Function("exports, require, module",
"\n/**\n * Filter the given `arr` with callback `fn(val, i)`,\n * when a truthy value is return then `val` is included\n * in the array returned.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function(arr, fn){\n  var ret = [];\n  for (var i = 0; i < arr.length; ++i) {\n    if (fn(arr[i], i)) {\n      ret.push(arr[i]);\n    }\n  }\n  return ret;\n};//@ sourceURL=component-select/index.js"
));
require.register("component-emitter/index.js", Function("exports, require, module",
"\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  fn._off = on;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var i = callbacks.indexOf(fn._off || fn);\n  if (~i) callbacks.splice(i, 1);\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n//@ sourceURL=component-emitter/index.js"
));
require.register("component-indexof/index.js", Function("exports, require, module",
"\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};//@ sourceURL=component-indexof/index.js"
));
require.register("component-simplify/index.js", Function("exports, require, module",
"/*\n Copyright (c) 2012, Vladimir Agafonkin\n Simplify.js is a high-performance polyline simplification library\n mourner.github.com/simplify-js\n*/\n\nmodule.exports = simplify;\n\n// to suit your point format, run search/replace for '.x' and '.y'\n// to switch to 3D, uncomment the lines in the next 2 functions\n// (configurability would draw significant performance overhead)\n\n\nfunction getSquareDistance(p1, p2) { // square distance between 2 points\n\n  var dx = p1.x - p2.x,\n//      dz = p1.z - p2.z,\n      dy = p1.y - p2.y;\n\n  return dx * dx +\n//         dz * dz +\n         dy * dy;\n}\n\nfunction getSquareSegmentDistance(p, p1, p2) { // square distance from a point to a segment\n\n  var x = p1.x,\n      y = p1.y,\n//      z = p1.z,\n\n      dx = p2.x - x,\n      dy = p2.y - y,\n//      dz = p2.z - z,\n\n      t;\n\n  if (dx !== 0 || dy !== 0) {\n\n    t = ((p.x - x) * dx +\n//         (p.z - z) * dz +\n         (p.y - y) * dy) /\n            (dx * dx +\n//             dz * dz +\n             dy * dy);\n\n    if (t > 1) {\n      x = p2.x;\n      y = p2.y;\n//      z = p2.z;\n\n    } else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n//      z += dz * t;\n    }\n  }\n\n  dx = p.x - x;\n  dy = p.y - y;\n//  dz = p.z - z;\n\n  return dx * dx +\n//         dz * dz +\n         dy * dy;\n}\n\n// the rest of the code doesn't care for the point format\n\n\nfunction simplifyRadialDistance(points, sqTolerance) { // distance-based simplification\n\n  var i,\n      len = points.length,\n      point,\n      prevPoint = points[0],\n      newPoints = [prevPoint];\n\n  for (i = 1; i < len; i++) {\n    point = points[i];\n\n    if (getSquareDistance(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n\n  if (prevPoint !== point) {\n    newPoints.push(point);\n  }\n\n  return newPoints;\n}\n\n\n// simplification using optimized Douglas-Peucker algorithm with recursion elimination\n\nfunction simplifyDouglasPeucker(points, sqTolerance) {\n\n  var len = points.length,\n\n      MarkerArray = (typeof Uint8Array !== undefined + '')\n                  ? Uint8Array\n                  : Array,\n\n      markers = new MarkerArray(len),\n\n      first = 0,\n      last  = len - 1,\n\n      i,\n      maxSqDist,\n      sqDist,\n      index,\n\n      firstStack = [],\n      lastStack  = [],\n\n      newPoints  = [];\n\n  markers[first] = markers[last] = 1;\n\n  while (last) {\n\n    maxSqDist = 0;\n\n    for (i = first + 1; i < last; i++) {\n      sqDist = getSquareSegmentDistance(points[i], points[first], points[last]);\n\n      if (sqDist > maxSqDist) {\n        index = i;\n        maxSqDist = sqDist;\n      }\n    }\n\n    if (maxSqDist > sqTolerance) {\n      markers[index] = 1;\n\n      firstStack.push(first);\n      lastStack.push(index);\n\n      firstStack.push(index);\n      lastStack.push(last);\n    }\n\n    first = firstStack.pop();\n    last = lastStack.pop();\n  }\n\n  for (i = 0; i < len; i++) {\n    if (markers[i]) {\n      newPoints.push(points[i]);\n    }\n  }\n\n  return newPoints;\n}\n\n\nfunction simplify(points, tolerance, highestQuality) {\n\n  var sqTolerance = (tolerance !== undefined)\n                  ? tolerance * tolerance\n                  : 1;\n\n  if (!highestQuality) {\n    points = simplifyRadialDistance(points, sqTolerance);\n  }\n  points = simplifyDouglasPeucker(points, sqTolerance);\n\n  return points;\n};\n//@ sourceURL=component-simplify/index.js"
));
require.register("component-autoscale-canvas/index.js", Function("exports, require, module",
"\n/**\n * Retina-enable the given `canvas`.\n *\n * @param {Canvas} canvas\n * @return {Canvas}\n * @api public\n */\n\nmodule.exports = function(canvas){\n  var ctx = canvas.getContext('2d');\n  var ratio = window.devicePixelRatio || 1;\n  if (1 != ratio) {\n    canvas.style.width = canvas.width + 'px';\n    canvas.style.height = canvas.height + 'px';\n    canvas.width *= ratio;\n    canvas.height *= ratio;\n    ctx.scale(ratio, ratio);\n  }\n  return canvas;\n};//@ sourceURL=component-autoscale-canvas/index.js"
));
require.register("paulmillr-console-polyfill/index.js", Function("exports, require, module",
"// Make it safe to do console.log() always.\n(function (con) {\n  var method;\n  var dummy = function() {};\n  var methods = ('assert,count,debug,dir,dirxml,error,exception,group,' +\n     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,' +\n     'time,timeEnd,trace,warn').split(',');\n  while (method = methods.pop()) {\n    con[method] = con[method] || dummy;\n  }\n})(window.console = window.console || {});\n//@ sourceURL=paulmillr-console-polyfill/index.js"
));
require.register("dynamics-visualization/index.js", Function("exports, require, module",
"var page = require(\"page\")\n  , each = require(\"each\")\n  , map = require(\"map\")\n  , select = require(\"select\")\n  , bsnav = require(\"booting-sub-nav\")\n  , storage = require('storage')\n  \n  , staticpage = require('./static')\n  , Game = require('./game')\n  , menus = require('./menu')\n  \n  , game_store = storage('games')\n  , game_handles = []\n  ;\n\nmodule.exports = {\n  run: setup\n}\n  \nfunction setup(prefix){\n  /* Routing */\n  \n  prefix = prefix || \"\";\n  \n  bsnav(document.getElementById('legend'), 10);\n\n  page(prefix + '/', showLegend, index);\n  page(prefix + '/help', hideLegend, staticpage('help'));\n  page(prefix + '/help/requirements', hideLegend, staticpage('requirements'));\n  page(prefix + '/help/walkthrough/:step?', hideLegend, staticpage('walkthrough'));\n  page();\n}\n\nfunction index(ctx, next){\n  var main = document.getElementById('main')\n    , game_list = game_store.get('game_list') || []\n    ;\n    \n  main.innerHTML = '';\n  game_handles = [];\n  \n  if (game_list.length){\n    each(game_list, function (game, index){\n      var g = new Game(game);\n      g.on('change', saveGameList);\n      prepend(main, g.dom.first().els[0]);\n      game_handles.push(g);\n    });\n  }\n  else {\n    addNewGame();\n  }\n  \n  var action_menu = new menus.ActionMenu({addNewGame: addNewGame});\n  prepend(main, action_menu.dom.first().els[0]);\n}\n\nfunction showLegend(ctx, next){\n  document.getElementById('legend').style.display = '';\n  next();\n}\n\nfunction hideLegend(ctx, next){\n  document.getElementById('legend').style.display = 'none';\n  next();\n}\n\nfunction prepend(target, content){\n  if (target.childNodes.length){\n    target.insertBefore(content, target.firstChild);\n  }\n  else {\n    append(target, content);\n  }\n}\n\nfunction append(target, content){\n  target.appendChild(content);  \n}\n\nfunction addNewGame(ev){\n  if (ev){\n    ev.preventDefault();\n  }\n  \n  var main = document.getElementById('main')\n    ;\n  \n  var g = new Game();\n  g.dom.first().addClass('editing');\n  g.on('change', saveGameList);\n  game_handles.push(g);\n    \n  if (main.childNodes.length > 1){\n    main.insertBefore(g.dom.first().els[0], main.childNodes[1])\n  }\n  else {\n    append(main, g.dom.first().els[0]);\n  }\n}\n\nfunction saveGameList(){\n  var game_list = select(map(game_handles, function (game){ return game.game; }), function (game){ return game !== null; })\n  game_store.set('game_list', game_list);\n  if (game_list.length === 0){\n    addNewGame();\n  }\n}\n//@ sourceURL=dynamics-visualization/index.js"
));
require.register("dynamics-visualization/test.js", Function("exports, require, module",
"module.exports = function (){\n  describe(\"dynvis\", function (){\n    it('should exist on window', function (){\n      expect(window.dynvis).to.not.be(undefined);\n      expect(dynvis).to.not.be(undefined);\n    });\n    \n    it('should be an object', function (){\n      expect(window.dynvis).to.be.a('object');\n    });\n    \n    describe(\"#run()\", function (){\n      it('should be a function', function (){\n        expect(dynvis.run).to.be.a('function');\n      });\n    });\n  });\n  \n  describe(\"static\", function (){\n    var stat = require(\"./static\");\n    \n    it('should exist', function (){\n      expect(stat).to.not.be(undefined);\n    });\n    \n    it('should be an object', function (){\n      expect(stat).to.be.a('object');\n    });\n    \n    describe(\"#help()\", function (){\n      it('should exist and be a function', function (){\n        expect(stat.help).to.not.be(undefined);\n        expect(stat.help).to.be.a('function');\n      });\n      \n    });\n    \n    describe(\"#requirements()\", function (){\n      it('should exist and be a function', function (){\n        expect(stat.requirements).to.not.be(undefined);\n        expect(stat.requirements).to.be.a('function');\n      });\n    });\n    \n    describe(\"#walkthrough()\", function (){\n      it('should exist and be a function', function (){\n        expect(stat.walkthrough).to.not.be(undefined);\n        expect(stat.walkthrough).to.be.a('function');\n      });\n    });\n  });\n}\n//@ sourceURL=dynamics-visualization/test.js"
));
require.register("dynamics-visualization/game.js", Function("exports, require, module",
"var game_types = {\n  'hd': \"Symmetric, Hawk-Dove\"\n, 'pd': \"Symmetric, Prisoner's Dilemma\"\n, 'pl': \"Symmetric, Prisoner's Delight\"\n, 'sh': \"Symmetric, Stag Hunt\"\n, 'edge': \"Symmetric, Edge Case\"\n, 'mp': \"Asymmetric, Matching Pennies\"\n, 'bos': \"Asymmetric, Battle of the Sexes\"\n, 'zsum': \"Asymmetric, Zero-Sum\"\n};\n\nvar event = require(\"event\")\n  , dom = require(\"dom\")\n  , each = require(\"each\")\n  , storage = require(\"storage\")\n  , emitter = require(\"emitter\")\n  , indexOf = require(\"indexof\")\n  , all = require(\"all\")\n  , simplify = require(\"simplify\")\n  , dynamics = require(\"dynamics\")\n  , Canvas = require(\"./canvas\")\n  \n  , game_tmpl = require('./templates/game')\n  , game_store = storage('games')\n  ;\n  \nmodule.exports = Game;\n\nfunction Game(game){\n  this.game = game || null;\n  \n  if (game){\n    this.dom = dom(game_tmpl({startindex: 0, game: game}));\n    this.setDisplayValues();\n    this.setDisplayHeaders();\n  }\n  else {\n    this.dom = dom(game_tmpl());\n  }\n  \n  this._symmetric_set = false;\n  this._zerosum_set = false;\n  this._autofill_set = false;\n  this.setBindings();\n}\n\nemitter(Game.prototype);\n\nGame.prototype.toggleInput = function (off, cr){\n  var tohide = ['input.entry-input[name=tl-' + cr + ']', 'input.entry-input[name=tr-' + cr + ']', \n                'input.entry-input[name=bl-' + cr + ']', 'input.entry-input[name=br-' + cr + ']']\n    , toshow = ['.entry.tl-' + cr, '.entry.tr-' + cr, '.entry.bl-' + cr, '.entry.br-' + cr]\n    , self = this\n    ;\n  \n  function hide(tohide){\n    each(tohide, function (sel){\n      self.dom.find(sel).css('display', 'none');\n    });\n  }\n  \n  function show(toshow){\n    each(toshow, function (sel){\n      self.dom.find(sel).css('display', 'inline');\n    });\n  }\n  \n  if (off){\n    hide(tohide);\n    show(toshow);\n  }\n  else {\n    hide(toshow);\n    show(tohide);\n  }\n};\n\nGame.prototype.toggleColumnInput = function (off){\n  this.toggleInput(off, 'c');\n};\n\nGame.prototype.toggleRowInput = function (off){\n  this.toggleInput(off, 'r');\n}\n\nGame.prototype.setSymmetricBindings = function (symmetric){\n  var self = this;\n  var newels = {\n    'tl': 'tl'\n  , 'tr': 'bl'\n  , 'bl': 'tr'\n  , 'br': 'br'\n  }\n  \n  function input_binding(el){\n    var newel = newels[el];\n    \n    return function (){\n      var val = parseInt(self.dom.find('input.entry-input[name=' + el + '-r]').els[0].value) || 0;\n      self.dom.find('input.entry-input[name=' + newel + '-c]').els[0].value = val;\n      self.dom.find('.entry.' + newel + '-c').els[0].innerHTML = val;\n    }\n  }\n    \n  if (symmetric && !this._symmetric_set){\n    this._symmetric_set = true;\n    \n    this.toggleColumnInput(true);\n    \n    each(['tl', 'tr', 'bl', 'br'], function (el){\n      var domel = self.dom.find('input.entry-input[name=' + el + '-r]').els[0]; \n      event.bind(domel, 'change', input_binding(el));\n      event.bind(domel, 'blur', input_binding(el));\n      event.bind(domel, 'keypress', input_binding(el));\n      domel.blur()\n    });\n    \n  }\n  else if (!symmetric && this._symmetric_set){\n    this._symmetric_set = false;\n    \n    this.toggleColumnInput(false);\n    \n    each(['tl', 'tr', 'bl', 'br'], function (el){\n      var domel = self.dom.find('input.entry-input[name=' + el + '-r]').els[0]; \n      event.unbind(domel, 'change', input_binding(el));\n      event.unbind(domel, 'blur', input_binding(el));\n      event.unbind(domel, 'keypress', input_binding(el));\n    });\n  }\n};\n\nGame.prototype.setZeroSumBindings = function (zerosum){\n  var self = this;\n\n  function input_binding(el){\n    return function (){\n      var val = parseInt(self.dom.find('input.entry-input[name=' + el + '-r]').els[0].value) || 0;\n      self.dom.find('input.entry-input[name=' + el + '-c]').els[0].value = -1 * val;\n      self.dom.find('.entry.' + el + '-c').els[0].innerHTML = (-1 * val).toString();\n    }\n  }\n\n  if (zerosum && !this._zerosum_set){\n    this._zerosum_set = true;\n    \n    this.toggleColumnInput(true);\n    \n    each(['tl', 'tr', 'bl', 'br'], function (el){\n      var domel = self.dom.find('input.entry-input[name=' + el + '-r]').els[0]; \n      event.bind(domel, 'change', input_binding(el));\n      event.bind(domel, 'blur', input_binding(el));\n      event.bind(domel, 'keypress', input_binding(el));\n    });\n  }\n  else if (!zerosum && this._zerosum_set){\n    this._zerosum_set = false;\n    \n    this.toggleColumnInput(false);\n    \n    each(['tl', 'tr', 'bl', 'br'], function (el){\n      var domel = self.dom.find('input.entry-input[name=' + el + '-r]').els[0]; \n      event.unbind(domel, 'change', input_binding(el));\n      event.unbind(domel, 'blur', input_binding(el));\n      event.unbind(domel, 'keypress', input_binding(el));\n    });\n  }\n};\n\nGame.prototype.setAutofillBindings = function (autofill){\n  if (autofill){\n    this._autofill_set = true;\n    \n    this.toggleRowInput(true);\n    this.toggleColumnInput(true);\n    \n    var aftype = this.dom.find('select[name=presets]').els[0].value;\n    var newgame = false;\n    \n    //['sh', 'pd', 'hd', 'pl', 'mp', 'bos']\n    switch (aftype){\n      case 'sh':\n        newgame = {\n          'tl-r': 4\n        , 'tl-c': 4\n        , 'tr-r': 0\n        , 'tr-c': 3\n        , 'bl-r': 3\n        , 'bl-c': 0\n        , 'br-r': 2\n        , 'br-c': 2\n        };\n        break;\n      case 'pd':\n        newgame = {\n          'tl-r': 3\n        , 'tl-c': 3\n        , 'tr-r': 0\n        , 'tr-c': 4\n        , 'bl-r': 4\n        , 'bl-c': 0\n        , 'br-r': 1\n        , 'br-c': 1\n        };\n        break;\n      case 'hd':\n        newgame = {\n          'tl-r': 3\n        , 'tl-c': 3\n        , 'tr-r': 2\n        , 'tr-c': 4\n        , 'bl-r': 4\n        , 'bl-c': 2\n        , 'br-r': 0\n        , 'br-c': 0\n        };\n        break;\n      case 'pl':\n        newgame = {\n          'tl-r': 4\n        , 'tl-c': 4\n        , 'tr-r': 1\n        , 'tr-c': 3\n        , 'bl-r': 3\n        , 'bl-c': 1\n        , 'br-r': 0\n        , 'br-c': 0\n        };\n        break;\n      case 'mp':\n        newgame = {\n          'tl-r': 1\n        , 'tl-c': -1\n        , 'tr-r': -1\n        , 'tr-c': 1\n        , 'bl-r': -1\n        , 'bl-c': 1\n        , 'br-r': 1\n        , 'br-c': -1\n        };\n        break;\n      case 'bos':\n        newgame = {\n          'tl-r': 3\n        , 'tl-c': 2\n        , 'tr-r': 0\n        , 'tr-c': 0\n        , 'bl-r': 0\n        , 'bl-c': 0\n        , 'br-r': 2\n        , 'br-c': 3\n        };\n        break; \n    }\n    \n    this.setInputValues(newgame);\n    this.setDisplayValues(newgame);\n  }\n  else if (!autofill && this._autofill_set){\n    this._autofill_set = false;\n    \n    this.toggleRowInput(false);\n    this.toggleColumnInput(false);\n  }\n}\n\nGame.prototype.changeBindings = function (){\n  var self = this\n    , sbox = this.dom.find('select[name=presets]').els[0]\n    , sboxval = sbox.options[sbox.selectedIndex].value\n    , symbind = (sboxval === 's')\n    , zsumbind = (sboxval === 'zsum')\n    , autobind = (indexOf(['sh', 'pd', 'hd', 'pl', 'mp', 'bos'], sboxval) !== -1)\n    , bindings = [symbind, zsumbind, autobind]\n    ;\n\n  each(bindings, function (tf, ind){\n    if (!tf){\n      switch (ind){\n        case 0:\n          self.setSymmetricBindings(tf);\n          break;\n        case 1:\n          self.setZeroSumBindings(tf);\n          break;\n        case 2:\n          self.setAutofillBindings(tf);\n          break;\n      }\n    }\n  });\n  \n  each(bindings, function (tf, ind){\n    if (tf){\n      switch (ind){\n        case 0:\n          self.setSymmetricBindings(tf);\n          break;\n        case 1:\n          self.setZeroSumBindings(tf);\n          break;\n        case 2:\n          self.setAutofillBindings(tf);\n          break;\n      }\n    }\n  });\n}\n\nGame.prototype.setBindings = function (){\n  var self = this;\n  \n  this.setSymmetricBindings(false);\n  this.setZeroSumBindings(false);\n  this.setAutofillBindings(false);\n  \n  event.bind(this.dom.find('a.save-button').els[0], 'click', function (){ self.stopEditing(); });\n  \n  event.bind(this.dom.find('a.process-button').els[0], 'click', function (){ console.log(\"Generating graphs...\"); self.generateGraphs(); });\n  \n  event.bind(this.dom.find('a.edit-button').els[0], 'click', function (){ self.startEditing(); });\n  \n  event.bind(this.dom.find('a.delete-game').els[0], 'click', function (){\n    document.getElementById('main').removeChild(self.dom.els[0]);\n    \n    self.game = null;\n    self.emit('change');\n  }); \n  \n  var selectbox = this.dom.find('select[name=presets]').els[0];\n  event.bind(selectbox, 'change', function (){ self.changeBindings(); });\n  event.bind(selectbox, 'blur', function (){ self.changeBindings(); });  \n};\n\nGame.prototype.startEditing = function (){\n  this.dom.find(\"input[name=label]\").els[0].value = this.game.label || \"\";\n  this.setInputValues();\n  \n  this.dom.first().addClass('editing');  \n  this.dom.find(\".canvas-container\").els[0].style.display = 'none';\n};\n\nGame.prototype.stopEditing = function (){\n  this.game = this.game || {};\n  \n  this.game.label = this.dom.find(\"input[name=label]\").els[0].value || \"\";\n  this.game['tl-r'] = parseInt(this.dom.find(\"input.entry-input[name=tl-r]\").els[0].value || 0);\n  this.game['tl-c'] = parseInt(this.dom.find(\"input.entry-input[name=tl-c]\").els[0].value || 0);\n  this.game['tr-r'] = parseInt(this.dom.find(\"input.entry-input[name=tr-r]\").els[0].value || 0);\n  this.game['tr-c'] = parseInt(this.dom.find(\"input.entry-input[name=tr-c]\").els[0].value || 0);\n  this.game['bl-r'] = parseInt(this.dom.find(\"input.entry-input[name=bl-r]\").els[0].value || 0);\n  this.game['bl-c'] = parseInt(this.dom.find(\"input.entry-input[name=bl-c]\").els[0].value || 0);\n  this.game['br-r'] = parseInt(this.dom.find(\"input.entry-input[name=br-r]\").els[0].value || 0);\n  this.game['br-c'] = parseInt(this.dom.find(\"input.entry-input[name=br-c]\").els[0].value || 0);\n  \n  this.setDisplayValues();\n  this.setDisplayHeaders();\n  \n  this.dom.first().removeClass('editing');\n  this.emit('change');\n};\n\nGame.prototype.setDisplayValues = function (game){\n  game = game || this.game;\n\n  this.dom.find(\".entry.tl-r\").els[0].innerHTML = game['tl-r'] || 0;\n  this.dom.find(\".entry.tl-c\").els[0].innerHTML = game['tl-c'] || 0;\n  this.dom.find(\".entry.tr-r\").els[0].innerHTML = game['tr-r'] || 0;\n  this.dom.find(\".entry.tr-c\").els[0].innerHTML = game['tr-c'] || 0;\n  this.dom.find(\".entry.bl-r\").els[0].innerHTML = game['bl-r'] || 0;\n  this.dom.find(\".entry.bl-c\").els[0].innerHTML = game['bl-c'] || 0;\n  this.dom.find(\".entry.br-r\").els[0].innerHTML = game['br-r'] || 0;\n  this.dom.find(\".entry.br-c\").els[0].innerHTML = game['br-c'] || 0; \n};\n\nGame.prototype.setDisplayHeaders = function (){\n  this.dom.find(\"h1.label\").els[0].innerHTML = this.game.label || \"\";\n  if (typeof this.game === \"object\"){\n    this.dom.find(\"h2.game-type\").els[0].innerHTML = this.getGameType();\n  }\n};\n\nGame.prototype.setInputValues = function (game){\n  game = game || this.game || {};\n  \n  this.dom.find(\"input.entry-input[name=tl-r]\").els[0].value = game['tl-r'] || 0;\n  this.dom.find(\"input.entry-input[name=tl-c]\").els[0].value = game['tl-c'] || 0;\n  this.dom.find(\"input.entry-input[name=tr-r]\").els[0].value = game['tr-r'] || 0;\n  this.dom.find(\"input.entry-input[name=tr-c]\").els[0].value = game['tr-c'] || 0;\n  this.dom.find(\"input.entry-input[name=bl-r]\").els[0].value = game['bl-r'] || 0;\n  this.dom.find(\"input.entry-input[name=bl-c]\").els[0].value = game['bl-c'] || 0;\n  this.dom.find(\"input.entry-input[name=br-r]\").els[0].value = game['br-r'] || 0;\n  this.dom.find(\"input.entry-input[name=br-c]\").els[0].value = game['br-c'] || 0;\n};\n\nGame.prototype.generateCanvases = function (){\n  this.canvases = {};\n  var self = this;\n  \n  each(this.dom.find(\".canvas-container canvas\").els, function (canvas){\n    if (!canvas) return;\n    var key = canvas.className;\n    self.canvases[key] = new Canvas(canvas, [1, 19], [1, 19]);\n    self.canvases[key].strongClear();\n    self.canvases[key].drawBoundary();\n  });\n};\n\nGame.prototype.generateGraphs = function (){\n  console.log(\"Un-hiding canvas container\");\n  this.dom.find(\".canvas-container\").els[0].style.display = 'block';\n  \n  this.generateCanvases();\n  \n  var self = this;\n  \n  setTimeout(function (){\n    self.generateBRPaths();\n  }, 0);\n  \n  \n  setTimeout(function (){\n    self.generateDtRPaths();\n  }, 0);\n  \n  setTimeout(function (){\n    self.generateCtVField();\n  }, 0);\n  \n  setTimeout(function (){\n    self.generateCtRPaths();\n  }, 0);\n  \n};\n\nGame.prototype.generateCtRPaths = function (){\n  var canvas = this.canvases['br'];\n  if (!canvas) return;\n  \n  var grid = 5;\n  var startpts = [];\n  for (var xpt = 1; xpt < grid; xpt++){\n    for (var ypt = 1; ypt < grid; ypt++){\n      startpts.push({x: xpt / grid, y: ypt / grid});\n    }\n  }\n  \n  var colors = ['green', 'yellow'];\n  var colorind = 1;\n  \n  function nextColor(){\n    colorind = 1 - colorind;\n    return colors[colorind];\n  }\n  \n  var segment_length = 250;\n  var self = this;\n  \n  function next(){\n    var start = startpts.shift();\n    if (!start){\n      console.log(\"Done drawing all paths.\");\n      return;\n    }\n    \n    console.log(\"Starting drawing CtR path from (%s, %s)...\", start.x, start.y);\n    var emitter = new dynamics.ContinuousReplicatorPath(self.game, start, {timestep: 0.005, duration: 10, debug: false});\n      \n    canvas.beginPathFrom(start);\n    canvas.context.lineWidth = 1;\n    canvas.context.strokeStyle = nextColor();\n    \n    var path_segment = [];\n    \n    emitter.on(\"point\", function (point){\n      if (path_segment.length >= segment_length){\n        draw_segment(path_segment);\n        path_segment = [];\n      }\n      \n      path_segment.push(point);\n    });\n    \n    emitter.on(\"done\", function (){\n      console.log(\"Done drawing path.\");\n      draw_segment(path_segment);\n      setTimeout(next, 0);\n    });\n    \n    emitter.generate(); \n  }\n  \n  function draw_segment(segment){\n    var simple_segment;\n    if (segment.length > 1){\n      simple_segment = simplify(segment, 0.0001);\n    }\n    else {\n      simple_segment = segment;\n    }\n    \n    each(simple_segment, function (node){\n      canvas.drawLineTo(node);\n    });\n    \n    canvas.stroke();\n  }\n  \n  next();\n};\n\nGame.prototype.generateCtVField = function (){\n  var canvas = this.canvases['bl'];\n  if (!canvas) return;\n  \n  var grid = 8;\n  var startpts = [];\n  for (var xpt = 1; xpt < grid; xpt++){\n    for (var ypt = 1; ypt < grid; ypt++){\n      startpts.push({x: xpt / grid, y: ypt / grid});\n    }\n  }\n  \n  var color = '#888888';\n  var self = this;\n  \n  function next(){\n    var start = startpts.shift();\n    if (!start){\n      console.log(\"Done drawing all vectors.\");\n      return;\n    }\n    \n    console.log(\"Starting drawing CtVector from (%s, %s)...\", start.x, start.y);\n    var emitter = new dynamics.ContinuousReplicatorVector(self.game, start, {debug: false});\n      \n    canvas.beginPathFrom(start);\n    canvas.context.lineWidth = 1;\n    canvas.context.strokeStyle = color;\n    \n    emitter.on(\"point\", function (point){\n      canvas.drawArrowTo(point);\n      canvas.stroke();\n    });\n    \n    emitter.on(\"done\", function (){\n      console.log(\"Done drawing path.\");\n      setTimeout(next, 0);\n    });\n    \n    emitter.generate(); \n  }\n  \n  next();\n};\n\nGame.prototype.generateDtRPaths = function (){\n  var canvas = this.canvases['tr'];\n  if (!canvas) return;\n  \n  var grid = 5;\n  var startpts = [];\n  for (var xpt = 1; xpt < grid; xpt++){\n    for (var ypt = 1; ypt < grid; ypt++){\n      startpts.push({x: xpt / grid, y: ypt / grid});\n    }\n  }\n  \n  var colors = ['green', 'yellow'];\n  var colorind = 1;\n  \n  function nextColor(){\n    colorind = 1 - colorind;\n    return colors[colorind];\n  }\n  \n  var segment_length = 5;\n  var self = this;\n  \n  function next(){\n    var start = startpts.shift();\n    if (!start){\n      console.log(\"Done drawing all paths.\");\n      return;\n    }\n    \n    console.log(\"Starting drawing DtR path from (%s, %s)...\", start.x, start.y);\n    var emitter = new dynamics.DiscreteReplicatorPath(self.game, start, {debug: false});\n      \n    canvas.beginPathFrom(start);\n    canvas.context.lineWidth = 1;\n    canvas.context.strokeStyle = nextColor();\n    \n    var path_segment = [];\n    \n    emitter.on(\"point\", function (point){\n      if (path_segment.length >= segment_length){\n        draw_segment(path_segment);\n        path_segment = [];\n      }\n      \n      path_segment.push(point);\n    });\n    \n    emitter.on(\"done\", function (){\n      console.log(\"Done drawing path.\");\n      draw_segment(path_segment);\n      setTimeout(next, 0);\n    });\n    \n    emitter.generate();\n  }\n  \n  function draw_segment(segment){\n    each(segment, function (node){\n      if (!node) return;\n      canvas.drawArrowTo(node);\n    });\n    \n    canvas.stroke();\n  }\n  \n  next();\n};\n\nGame.prototype.generateBRPaths = function (){\n  var canvas = this.canvases['tl'];\n  if (!canvas) return;\n  \n  var grid = 5;\n  var startpts = [];\n  for (var xpt = 1; xpt < grid; xpt++){\n    for (var ypt = 1; ypt < grid; ypt++){\n      startpts.push({x: xpt / grid, y: ypt / grid});\n    }\n  }\n  \n  var colors = ['green', 'yellow'];\n  var colorind = 1;\n  \n  function nextColor(){\n    colorind = 1 - colorind;\n    return colors[colorind];\n  }\n  \n  var self = this;\n  \n  function next(){\n    var start = startpts.shift();\n    if (!start){\n      console.log(\"Done drawing all paths.\");\n      console.log(\"Drawing BR curves for each player...\");\n      var br_curves = dynamics.BestResponseCurves(self.game, {debug: true});\n      \n      br_curves.forEach(function (curve_pts, player){\n        start = curve_pts.shift();\n        \n        console.log(start);\n        console.log(curve_pts);\n        \n        if (!start) return;\n        canvas.beginPathFrom(start);\n        canvas.context.lineWidth = 1;\n        canvas.context.strokeStyle = ['red', 'blue'][(player || 0) % 2];\n        curve_pts.forEach(function (node){\n          canvas.drawLineTo(node);\n        });\n        canvas.stroke();\n      });\n      \n      return;\n    }\n    \n    console.log(\"Starting drawing BR path from (%s, %s)...\", start.x, start.y);\n    var emitter = new dynamics.BestResponsePath(self.game, start, {debug: true});\n      \n    canvas.beginPathFrom(start);\n    canvas.context.lineWidth = 1;\n    canvas.context.strokeStyle = nextColor();\n    \n    emitter.on(\"point\", function (point){\n      canvas.drawArrowTo(point);\n      canvas.stroke();\n    });\n    \n    emitter.on(\"done\", function (){\n      console.log(\"Done drawing path.\");\n      setTimeout(next, 0);\n    });\n    \n    emitter.generate(); \n  }\n  \n  next();\n};\n\n/**\n * Determines if the game is symmetric or not\n */\nGame.prototype.isSymmetric = function (){\n  console.log(\"here\");\n  console.log(this.game);\n  return  (this.game['tl-r'] || 0) == (this.game['tl-c'] || 0) &&\n          (this.game['tr-r'] || 0) == (this.game['bl-c'] || 0) &&\n          (this.game['bl-r'] || 0) == (this.game['tr-c'] || 0) &&\n          (this.game['br-r'] || 0) == (this.game['br-c'] || 0);\n};\n\n/**\n * Classifies the game\n *\n */\nGame.prototype.identify = function (){\n  if (!this.isSymmetric()){\n    return this.isBattleOfTheSexes() || this.isMatchingPennies() || this.isZeroSum() || false;\n  }\n  \n  var a = (this.game['tl-r'] || 0) - (this.game['bl-r'] || 0);\n  var b = (this.game['br-r'] || 0) - (this.game['tr-r'] || 0);\n\n  if (a > 0 && b > 0) {\n      return 'sh';\n  }\n  else if (a > 0 && b < 0) {\n      return 'pl';\n  }\n  else if (a < 0 && b > 0) {\n      return 'pd';\n  }\n  else if (a < 0 && b < 0) {\n      return 'hd';\n  }\n  else {\n      return 'edge';\n  }\n};\n\n/**\n * Normalizes game payoffs for type checking\n *\n */\nGame.prototype.normalizedPayoffs = function (){\n  if (this.game === null) return null;\n  \n  var normal_game = {};\n  var keys = ['tl-r', 'tl-c', 'tr-r', 'tr-c', 'bl-r', 'bl-c', 'br-r', 'br-c'];  \n  \n  var mult_factor;\n  var pre_add_factor;\n  var max;\n  \n  //Normalize to the top-left corner, making the greater payoff 1 and the lesser -1, if possible. If they are equal they are both made 1  \n  pre_add_factor = ((this.game['tl-r'] || 0) + (this.game['tl-c'] || 0)) / 2.0 * -1;\n  \n  if ((this.game['tl-r'] || 0) > (this.game['tl-c'] || 0)){\n    max = this.game['tl-r'] || 0;\n  } \n  else {\n    max = this.game['tl-c'] || 0;\n  }\n  \n  if (max == 0 && pre_add_factor == 0){\n    pre_add_factor = 1;    \n  }\n  \n  if (max + pre_add_factor != 0){\n    mult_factor = 1.0 / (max + pre_add_factor);\n  }\n  else {\n    mult_factor = 1;\n  }\n  \n  var self = this;\n  keys.forEach(function (key){\n    normal_game[key] = ((self.game[key] || 0) + pre_add_factor) * mult_factor;\n  });\n  \n  return normal_game;\n};\n\n/**\n * Determines if the game is a Battle of the Sexes\n *\n */\nGame.prototype.isBattleOfTheSexes = function (){\n  /*var min = Math.min(this.game['tl-r'], this.game['tl-c'], this.game['tr-r'], this.game['tl-c'],\n          this.game['bl-r'], this.game['bl-c'], this.game['br-r'], this.game['br-c']);\n\n  var game2 = {};\n\n  game2['tl-r'] = this.game['tl-r'] - min;\n  game2['tr-r'] = this.game['tr-r'] - min;\n  game2['bl-r'] = this.game['bl-r'] - min;\n  game2['br-r'] = this.game['br-r'] - min;\n  game2['tl-c'] = this.game['tl-c'] - min;\n  game2['tr-c'] = this.game['tr-c'] - min;\n  game2['bl-c'] = this.game['bl-c'] - min;\n  game2['br-c'] = this.game['br-c'] - min;\n\n  if (Math.min(game2['tr-r'], game2['tr-c'], game2['bl-r'], game2['bl-c']) == 0 &&\n      Math.max(game2['tr-r'], game2['tr-c'], game2['bl-r'], game2['bl-c']) == 0 &&\n      (game2['tl-r'] - game2['tl-c']) * (game2['br-r'] - game2['br-c']) < 0){\n          return 'bos';\n  }\n\n  if (Math.min(game2['tl-r'], game2['tl-c'], game2['br-r'], game2['br-c']) == 0 &&\n      Math.max(game2['tl-r'], game2['tl-c'], game2['br-r'], game2['br-c']) == 0 &&\n      (game2['tr-r'] - game2['tr-c']) * (game2['bl-r'] - game2['bl-c']) < 0){\n          return 'bos';\n  }*/\n  \n  var normal_game = this.normalizedPayoffs();\n  \n  if (normal_game['tl-r'] == normal_game['br-c'] && normal_game['tl-c'] == normal_game['br-r'] && \n      all(['bl-r', 'bl-c', 'tr-r', 'tr-c'], function (key){\n        return this[key] < -1 && this[key] == this['bl-r'];\n      }, normal_game)){\n        return 'bos';  \n  }\n\n  return false;\n};\n\n/**\n * Determines if the game is a Matching Pennies\n *\n */\nGame.prototype.isMatchingPennies = function (){\n  var normal_game = this.normalizedPayoffs();\n\n  return  this.isZeroSum() &&\n          (normal_game['tl-r'] + normal_game['tr-r'] == 0) &&\n          (normal_game['tl-r'] + normal_game['bl-r'] == 0) &&\n          (normal_game['bl-r'] + normal_game['br-r'] == 0) ? 'mp' : false;\n};\n\n/**\n * Determines if the game is zero-sum\n *\n */\nGame.prototype.isZeroSum = function (){\n  var normal_game = this.normalizedPayoffs();\n\n  return  (normal_game['tl-r'] + normal_game['tl-c'] == 0) &&\n          (normal_game['tr-r'] + normal_game['tr-c'] == 0) &&\n          (normal_game['bl-r'] + normal_game['bl-c'] == 0) &&\n          (normal_game['br-r'] + normal_game['br-c'] == 0) ? 'zsum' : false;\n};\n\n/**\n * Get the name of the type of the game\n *\n */\nGame.prototype.getGameType = function (){\n  return game_types[this.identify()] || \"Asymmetric\";\n};\n//@ sourceURL=dynamics-visualization/game.js"
));
require.register("dynamics-visualization/menu.js", Function("exports, require, module",
"var dom = require(\"dom\")\n  , event = require(\"event\")\n  , action_tmpl = require('./templates/index_actions')\n  ;\n  \nmodule.exports = {\n  ActionMenu: ActionMenu\n}\n\nfunction ActionMenu(bindings){\n  this.dom = dom(action_tmpl());\n  this.bindings = bindings || {};\n  this.setBindings(); \n}\n\nActionMenu.prototype.setBindings = function (){\n  var self = this;\n  this.dom.find('a.add-game').each(function (el, i){\n    event.bind(el.els[0], 'click', self.bindings.addNewGame || function (){});\n  });\n};\n//@ sourceURL=dynamics-visualization/menu.js"
));
require.register("dynamics-visualization/canvas.js", Function("exports, require, module",
"module.exports = Canvas;\n\nfunction Canvas(domcanvas, xpadding, ypadding){\n  this.canvas = domcanvas;\n  this.context = domcanvas.getContext(\"2d\");\n \n  this.xpadding = xpadding || [0,0];\n  this.ypadding = ypadding || [0,0];\n  \n  var box = this.canvas.getBoundingClientRect();\n  \n  this.full_width = box.width;\n  this.width = box.width - this.xpadding[0] - this.xpadding[1];\n  \n  this.full_height = box.height;\n  this.height = box.height - this.ypadding[0] - this.ypadding[1];\n  \n  this.last_point = null;\n};\n\nCanvas.prototype.transformPoint = function (point){\n  return {x: this.width * point.x + this.xpadding[0], y: this.height * (1-point.y) + this.ypadding[0]};\n};\n\nCanvas.prototype.beginPathFrom = function (start, options){\n  var pt = this.transformPoint(start);\n  this.context.beginPath();\n  this.context.moveTo(pt.x, pt.y);\n  this.last_point = pt;\n};\n\nCanvas.prototype.drawLineTo = function (topoint, forceStroke){\n  var pt = this.transformPoint(topoint);\n  this.context.lineTo(pt.x, pt.y);\n  if (forceStroke) this.stroke();\n  \n  this.last_point = pt;\n};\n\nCanvas.prototype.drawArrowTo = function (topoint){\n  var dtheta = 0.423\n    , point = this.transformPoint(topoint)\n    ;\n  \n  //angle between last point and this one\n  var dx = this.last_point.x - point.x\n    , dy = this.last_point.y - point.y\n    , theta = Math.atan2(dy, dx)\n    ;\n  \n  this.drawLineTo(topoint); // takes care of last_point\n  this.stroke();\n  \n  //if (!(dx > 10 || dy > 10)) return;\n  this.context.save();\n  this.context.fillStyle = this.context.strokeStyle;\n  this.context.arc(point.x, point.y, 5, theta - dtheta, theta + dtheta);\n  this.context.lineTo(point.x, point.y);\n  this.context.closePath();\n  this.context.fill();\n  this.context.restore();\n  this.context.moveTo(point.x, point.y);\n  \n};\n\nCanvas.prototype.stroke = function (){\n  this.context.stroke();\n};\n\nCanvas.prototype.drawBoundary = function (){\n  this.context.lineWidth = 1;\n  this.context.strokeStyle = '#bbbbbb';\n  this.context.fillStyle = '#ffffff';\n  this.context.clearRect(0,0,this.full_width,this.full_height);\n  \n  this.context.fillRect(this.xpadding[0],this.ypadding[0],this.width + this.xpadding[0],this.height+this.ypadding[0]);\n  this.context.strokeRect(this.xpadding[0],this.ypadding[0],this.width + this.xpadding[0],this.height+this.ypadding[0]);\n};\n\nCanvas.prototype.strongClear = function (){\n  var newCanvas = document.createElement(\"canvas\");\n  newCanvas.width = this.canvas.width;\n  newCanvas.height = this.canvas.height;\n  newCanvas.className = this.canvas.className;\n  this.canvas.parentNode.replaceChild(newCanvas, this.canvas);\n  this.canvas = newCanvas;\n  this.context = this.canvas.getContext(\"2d\");\n  \n  var box = this.canvas.getBoundingClientRect();\n  \n  this.full_width = box.width;\n  this.width = box.width - this.xpadding[0] - this.xpadding[1];\n  \n  this.full_height = box.height;\n  this.height = box.height - this.ypadding[0] - this.ypadding[1];\n  \n  this.last_point = null; \n};\n//@ sourceURL=dynamics-visualization/canvas.js"
));
require.register("dynamics-visualization/static.js", Function("exports, require, module",
"var clone = require('clone')\n  , templates = {\n      help: require(\"./templates/help\")\n    , requirements: require(\"./templates/requirements\")\n    , walkthrough: require(\"./templates/walkthrough\")\n    }\n  ;\n\nmodule.exports = function (tmpl, locals){\n  if (!templates[tmpl]){\n    return function (){};\n  }\n  \n  return function (ctx, next){\n    var mylocals = clone(locals || {});\n    mylocals.ctx = mylocals.ctx || ctx;\n    document.getElementById(\"main\").innerHTML = templates[tmpl](mylocals);\n  };\n}\n//@ sourceURL=dynamics-visualization/static.js"
));
require.register("dynamics-visualization/templates/game.js", Function("exports, require, module",
"module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\n var tabindex = typeof startindex !== \"undefined\" ? startindex || 0 : 0\n var game = typeof game !== \"undefined\" ? game || {} : {}\n var gtype = typeof game_type !== \"undefined\" ? game_type || \"\" : \"\"\nbuf.push('<div class=\"cblock game\"><form accept-charset=\"utf-8\" method=\"post\"><fieldset><div class=\"game-actions\"><a');\nbuf.push(attrs({ 'tabindex':(tabindex + 11), \"class\": ('button') + ' ' + ('positive') + ' ' + ('save-button') }, {\"tabindex\":true}));\nbuf.push('>save game</a><a class=\"button positive process-button\">generate graphs</a><br/><a class=\"button edit-button\">edit game</a><br class=\"edit-button\"/><a');\nbuf.push(attrs({ 'tabindex':(tabindex + 12), \"class\": ('button') + ' ' + ('delete-game') + ' ' + ('negative') }, {\"tabindex\":true}));\nbuf.push('>delete game</a></div><div class=\"game-header\"><a href=\"#\"><h1 class=\"label\"></h1></a></div><div class=\"game-grid\"><input');\nbuf.push(attrs({ 'type':(\"text\"), 'name':(\"label\"), 'placeholder':(\"Game Label\"), 'tabindex':(++tabindex), 'value':(game.label || \"\"), \"class\": ('title') }, {\"type\":true,\"name\":true,\"placeholder\":true,\"tabindex\":true,\"value\":true}));\nbuf.push('/><h2 class=\"game-type\">');\nvar __val__ = gtype\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</h2><select');\nbuf.push(attrs({ 'size':(1), 'name':(\"presets\"), 'tabindex':(++tabindex), \"class\": ('presets') }, {\"size\":true,\"name\":true,\"tabindex\":true}));\nbuf.push('><option value=\"f\">Free Entry</option><optgroup label=\"Symmetric Games\"><option value=\"s\">Free Symmetric Game</option><option value=\"sh\">Stag Hunt</option><option value=\"pd\">Prisoner\\'s Dilemma</option><option value=\"hd\">Hawk-Dove</option><option value=\"pl\">Prisoner\\'s Delight</option></optgroup><optgroup label=\"Asymmetric Games\"><option value=\"zsum\">Free Zero-Sum Game</option><option value=\"mp\">Matching Pennies</option><option value=\"bos\">Battle of the Sexes</option></optgroup></select><div class=\"game-grid-actual\"><div class=\"row\"><div class=\"cell\"><input');\nbuf.push(attrs({ 'type':(\"text\"), 'name':(\"tl-c\"), 'placeholder':(\"Col TL\"), 'tabindex':(++tabindex + 1), 'value':(game['tl-c']), \"class\": ('entry-input') + ' ' + ('right') + ' ' + ('tl-c') + ' ' + ('text') }, {\"type\":true,\"name\":true,\"placeholder\":true,\"tabindex\":true,\"value\":true}));\nbuf.push('/><div class=\"entry right tl-c\">');\nvar __val__ = game['tl-c'] || \"\"\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</div><input');\nbuf.push(attrs({ 'type':(\"text\"), 'name':(\"tl-r\"), 'placeholder':(\"Row TL\"), 'tabindex':(++tabindex - 1), 'value':(game['tl-r']), \"class\": ('entry-input') + ' ' + ('left') + ' ' + ('tl-r') + ' ' + ('text') }, {\"type\":true,\"name\":true,\"placeholder\":true,\"tabindex\":true,\"value\":true}));\nbuf.push('/><div class=\"entry left tl-r\">');\nvar __val__ = game['tl-r'] || \"\"\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</div><span class=\"sep\">,</span></div><div class=\"cell last\"><input');\nbuf.push(attrs({ 'type':(\"text\"), 'name':(\"tr-c\"), 'placeholder':(\"Col TR\"), 'tabindex':(++tabindex + 1), 'value':(game['tr-c']), \"class\": ('entry-input') + ' ' + ('right') + ' ' + ('tr-c') + ' ' + ('text') }, {\"type\":true,\"name\":true,\"placeholder\":true,\"tabindex\":true,\"value\":true}));\nbuf.push('/><div class=\"entry right tr-c\">');\nvar __val__ = game['tr-c'] || \"\"\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</div><input');\nbuf.push(attrs({ 'type':(\"text\"), 'name':(\"tr-r\"), 'placeholder':(\"Row TR\"), 'tabindex':(++tabindex - 1), 'value':(game['tr-r']), \"class\": ('entry-input') + ' ' + ('left') + ' ' + ('tr-r') + ' ' + ('text') }, {\"type\":true,\"name\":true,\"placeholder\":true,\"tabindex\":true,\"value\":true}));\nbuf.push('/><div class=\"entry left tr-r\">');\nvar __val__ = game['tr-r'] || \"\"\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</div><span class=\"sep\">,</span></div></div><div class=\"row last\"><div class=\"cell\"><input');\nbuf.push(attrs({ 'type':(\"text\"), 'name':(\"bl-c\"), 'placeholder':(\"Col BL\"), 'tabindex':(++tabindex + 1), 'value':(game['bl-c']), \"class\": ('entry-input') + ' ' + ('right') + ' ' + ('bl-c') + ' ' + ('text') }, {\"type\":true,\"name\":true,\"placeholder\":true,\"tabindex\":true,\"value\":true}));\nbuf.push('/><div class=\"entry right bl-c\">');\nvar __val__ = game['bl-c'] || \"\"\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</div><input');\nbuf.push(attrs({ 'type':(\"text\"), 'name':(\"bl-r\"), 'placeholder':(\"Row BL\"), 'tabindex':(++tabindex - 1), 'value':(game['bl-r']), \"class\": ('entry-input') + ' ' + ('left') + ' ' + ('bl-r') + ' ' + ('text') }, {\"type\":true,\"name\":true,\"placeholder\":true,\"tabindex\":true,\"value\":true}));\nbuf.push('/><div class=\"entry left bl-r\">');\nvar __val__ = game['bl-r'] || \"\"\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</div><span class=\"sep\">,</span></div><div class=\"cell last\"><input');\nbuf.push(attrs({ 'type':(\"text\"), 'name':(\"br-c\"), 'placeholder':(\"Col BR\"), 'tabindex':(++tabindex + 1), 'value':(game['br-c']), \"class\": ('entry-input') + ' ' + ('right') + ' ' + ('br-c') + ' ' + ('text') }, {\"type\":true,\"name\":true,\"placeholder\":true,\"tabindex\":true,\"value\":true}));\nbuf.push('/><div class=\"entry right br-c\">');\nvar __val__ = game['br-c'] || \"\"\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</div><input');\nbuf.push(attrs({ 'type':(\"text\"), 'name':(\"br-r\"), 'placeholder':(\"Row BR\"), 'tabindex':(++tabindex - 1), 'value':(game['br-r']), \"class\": ('entry-input') + ' ' + ('left') + ' ' + ('br-r') + ' ' + ('text') }, {\"type\":true,\"name\":true,\"placeholder\":true,\"tabindex\":true,\"value\":true}));\nbuf.push('/><div class=\"entry left br-r\">');\nvar __val__ = game['br-r'] || \"\"\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</div><span class=\"sep\">,</span></div></div></div></div><div class=\"canvas-container\"><canvas width=\"320\" height=\"320\" class=\"tl\"></canvas><canvas width=\"320\" height=\"320\" class=\"tr\"></canvas><canvas width=\"320\" height=\"320\" class=\"bl\"></canvas><canvas width=\"320\" height=\"320\" class=\"br\"></canvas></div></fieldset></form></div>');\n}\nreturn buf.join(\"\");\n}//@ sourceURL=dynamics-visualization/templates/game.js"
));
require.register("dynamics-visualization/templates/help.js", Function("exports, require, module",
"module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"cblock\"><h2>System Help</h2><dl><dt><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/requirements\") }, {\"href\":true}));\nbuf.push('>System Requirements</a></dt><dd>This page will detail what browsers and plugins are known to be \\nnecessary, compatible, or incompatible with this system. </dd><dt><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough\") }, {\"href\":true}));\nbuf.push('>Walkthrough Demonstration</a></dt><dd>This walkthrough will show you how to use the system and what to expect\\nexpect as output given various options.</dd><dt>Contact the Author</dt><dd>You are welcome to contact the author at any time:<a href=\"mailto: greg@ideafreemonoid.org\">Gregory McWhirter</a></dd></dl></div>');\n}\nreturn buf.join(\"\");\n}//@ sourceURL=dynamics-visualization/templates/help.js"
));
require.register("dynamics-visualization/templates/requirements.js", Function("exports, require, module",
"module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"cblock\"><h2>System Requirements</h2><p>This website should work under the following web browsers. Other \\nversions may work, but are not guaranteed to do so. Additionally, \\njavascript must be enabled in your browser for this site to \\nfunction correctly.</p><noscript><p>If you are seeing this line, javascript is NOT enabled. Please\\nenable it if you would like to use this site.</p></noscript><p>This compatibility list was derived from&#32;<a href=\"http://caniuse.com/#feat=canvas\">http://caniuse.com/#feat=canvas</a>. Please consult that site if you are interested in mobile browser\\nsupport and other concerns. </p><h3>Web Browsers</h3><ul><li><a href=\"http://www.mozilla.com/en-US/firefox/\">Mozilla Firefox 18.0 and later</a></li><li><a href=\"http://www.apple.com/safari/\">Apple Safari 5.1 and later</a></li><li><a href=\"http://www.google.com/chrome/\">Google Chrome 24.0 and later</a></li><li><a href=\"http://www.opera.com/browser/\">Opera 12.1 and later</a></li><li><a href=\"http://www.microsoft.com/windows/internet-explorer/default.aspx\">Microsoft Internet Explorer 9 and later</a></li></ul></div>');\n}\nreturn buf.join(\"\");\n}//@ sourceURL=dynamics-visualization/templates/requirements.js"
));
require.register("dynamics-visualization/templates/walkthrough.js", Function("exports, require, module",
"module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\n var context = typeof ctx !== \"undefined\" ? ctx.params || {} : {}\nbuf.push('<div class=\"cblock\"><h2>System Demonstration</h2><p style=\"font-weight: bold; color: red;\">This walkthrough is currently out of date. You can use it as a \\nrough guide, but the images will not work and some descriptions\\nare incorrect. It should be fixed \"soon\".</p>');\n if (context.step)\n{\nbuf.push('<a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough\") }, {\"href\":true}));\nbuf.push('>Table of Contents</a>');\n}\n if (context.step == 1)\n{\nbuf.push('<h3>Introduction</h3><p>This website is intended to assist in building intuition about the\\ndynamics of two-player games. It provides visualizations for the\\nbest-response dynamics, as well as for two population discrete-time\\nand continuous-time replicator dynamics.</p><p>This is a tutorial intended to show you what the system can do and\\nhow to use it. Opening another browser window or tab and following\\nalong is highly encouraged. Please see the&#32;<a');\nbuf.push(attrs({ 'href':(prefix + \"/help/requirements\") }, {\"href\":true}));\nbuf.push('>system requirements</a>&#32;page as well.</p><p><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/2\") }, {\"href\":true}));\nbuf.push('>Begin Demonstration &raquo;</a></p>');\n}\n else if (context.step == 2)\n{\nbuf.push('<h3>Basic Controls and Adding Games</h3><p>To begin, you are presented only with&#32;<a href=\"./images/Screenshot1.png\" class=\"lightbox\">some controls</a>. At the outset, we are most concerned with the \"add game\"\\nbutton. </p><p>Clicking the \"add game\" button will reveal an&#32;<a href=\"./images/Screenshot2.png\" class=\"lightbox\">interface for entering game information</a>. The entry defaults to allowing you to enter all game parameters.\\nHowever, there is a&#32;<a href=\"./images/Screenshot3.png\" class=\"lightbox\">drop-down available</a>&#32;with which you can select to use one of many common games\\ninstead of entering your own.</p><p><a href=\"./images/Screenshot4.png\" class=\"lightbox\">Selecting \"Stag Hunt\" from the drop-down</a>&#32;will enter values for the game parameters automatically. We\\ncan also&#32;<a href=\"./images/Screenshot5.png\" class=\"lightbox\">give the game a label</a>&#32;to more easily remember what game it is later. Giving the game\\na label is optional. If one is not provided, a (rather ugly) one\\nwill be generated.</p><p>You can re-select drop-down entries and change the game parameters\\nas much as you would like. When you are satisfied with the parameter\\nvalues, clicking the \"save game\" button will save the parameters and&#32;<a href=\"./images/Screenshot6.png\" class=\"lightbox\">show you the normal (strategic) form of the game</a>.</p><p><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/1\") }, {\"href\":true}));\nbuf.push('>&laquo; Back to Introduction</a><span class=\"link-sep\">|</span><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/3\") }, {\"href\":true}));\nbuf.push('>Continue with Generating Visualizations &raquo;</a></p>');\n}\n else if (context.step == 3)\n{\nbuf.push('<h3>Generating Visualizations</h3><p>Once we have the normal (strategic) form of the game, clicking the\\n\"generate graphs\" button will (perhaps a bit slowly)&#32;<a href=\"./images/Screenshot7.png\" class=\"lightbox\">reveal four graphs</a>. If the graphs are not generated, please check that your system\\nmeets the &#32;<a');\nbuf.push(attrs({ 'href':(prefix + \"/help/requirements\") }, {\"href\":true}));\nbuf.push('>system requirements</a>.</p><p>The top-left graph shows the best-response dynamics for the game.\\nThe axes in each graph correspond to the cells of the normal form.\\nFor example, the top-left corner of the graph is the point where the\\nrow player always chooses the upper row and the column player\\nchooses the left column.</p><p>The bottom-left graph shows a differential vector field according\\nto the replicator dynamics. The upper-right graph shows trajectories\\nof the discrete-time replicator dynamics, and the bottom-right graph\\nshows trajectories of the continuous-time replicator dynamics.</p><p><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/2\") }, {\"href\":true}));\nbuf.push('>&laquo; Back to Basic Controls and Adding Games</a><span class=\"link-sep\">|</span><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/4\") }, {\"href\":true}));\nbuf.push('>Continue with Editing Games &raquo;</a></p>');\n}\n else if (context.step == 4)\n{\nbuf.push('<h3>Editing Games</h3><p>At any time, you can go back and edit the game you have entered.\\nClicking the \"edit game\" button will return you to<a href=\"./images/Screenshot8.png\" class=\"lightbox\">the game editing interface</a>. Changing the drop-down selector to \"Free Entry\" will&#32;<a href=\"./images/Screenshot9.png\" class=\"lightbox\">let us change the values of the game parameters</a>&#32;to anything we would like. For example, we might enter the\\npayoffs show in&#32;<a href=\"./images/Screenshot9.png\" class=\"lightbox\">this screenshot</a>.</p><p>When we are done editing the parameters, we can again click the\\n\"save game\" button and return to&#32;<a href=\"./images/Screenshot11.png\" class=\"lightbox\">viewing the normal form</a>&#32;of the game. Clicking \"generate graphs\" with these new parameters\\nwill once again&#32;<a href=\"./images/Screenshot12.png\" class=\"lightbox\">reveal several graphs</a>&#32;visualizing the various aspects of the dynamical systems\\nmentioned earlier.</p><p><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/3\") }, {\"href\":true}));\nbuf.push('>&laquo; Back to Generating Visualizations</a><span class=\"link-sep\">|</span><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/5\") }, {\"href\":true}));\nbuf.push('>Continue with Using Multiple Games at Once &raquo;</a></p>');\n}\n else if (context.step == 5)\n{\nbuf.push('<h3>Using Multiple Games at Once</h3><p>Sometimes it is useful to compare games directly. While we could\\nlook at one game\\'s dynamics, edit the parameters, and then look at\\nanother\\'s, it is often easier to have both sets of graphs on the\\nscreen at the same time. This system makes that relatively easy.</p><p>At any time, you can again click the \"add game\" button, which will&#32;<a href=\"./images/Screenshot13.png\" class=\"lightbox\">insert an entry form for another game</a>&#32;at the bottom of the page. This form works exactly like the\\nthe first one we demonstrated earlier.</p><p>Having many games saved at the same time can be unwieldy. Therefore,\\nit is possible to \"collapse\" the games,&#32;<a href=\"./images/Screenshot14.png\" class=\"lightbox\">leaving only their label showing</a>.\\nThis is accomplished either by clicking the \"collapse all\" button,\\nor by clicking on an individual game\\'s label.\\nTo re-expand the game, click on the label a second time, or click\\nthe \"expand all\" button.</p><p>Finally, games can also be sorted in the list by dragging them up\\nand down. A blue area will&#32;<a href=\"./images/Screenshot15.png\" class=\"lightbox\">show where the game will be inserted</a>&#32;in the list once it is released.</p><p><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/4\") }, {\"href\":true}));\nbuf.push('>&laquo; Back to Editing Games</a></p>');\n}\n else\n{\nbuf.push('<h3>Table of Contents</h3><ol><li><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/1\") }, {\"href\":true}));\nbuf.push('>Introduction</a></li><li><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/2\") }, {\"href\":true}));\nbuf.push('>Basic Controls and Adding Games</a></li><li><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/3\") }, {\"href\":true}));\nbuf.push('>Generating Visualizations</a></li><li><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/4\") }, {\"href\":true}));\nbuf.push('>Editing Games</a></li><li><a');\nbuf.push(attrs({ 'href':(prefix + \"/help/walkthrough/5\") }, {\"href\":true}));\nbuf.push('>Using Multiple Games at Once</a></li></ol>');\n}\nbuf.push('</div>');\n}\nreturn buf.join(\"\");\n}//@ sourceURL=dynamics-visualization/templates/walkthrough.js"
));
require.register("dynamics-visualization/templates/index_actions.js", Function("exports, require, module",
"module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"cblock tight-vert\"><a href=\"#\" class=\"button positive add-game\">+ Add Game</a></div>');\n}\nreturn buf.join(\"\");\n}//@ sourceURL=dynamics-visualization/templates/index_actions.js"
));
require.alias("visionmedia-page.js/index.js", "dynamics-visualization/deps/page/index.js");

require.alias("gsmcwhirter-booting-sub-nav/index.js", "dynamics-visualization/deps/booting-sub-nav/index.js");
require.alias("gsmcwhirter-booting-sub-nav/scroll.js", "dynamics-visualization/deps/booting-sub-nav/scroll.js");
require.alias("component-classes/index.js", "gsmcwhirter-booting-sub-nav/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("gsmcwhirter-storage/index.js", "dynamics-visualization/deps/storage/index.js");
require.alias("component-inherit/index.js", "gsmcwhirter-storage/deps/inherit/index.js");

require.alias("component-cookie/index.js", "gsmcwhirter-storage/deps/cookie/index.js");

require.alias("component-json/index.js", "gsmcwhirter-storage/deps/json/index.js");

require.alias("component-json-fallback/index.js", "gsmcwhirter-storage/deps/json-fallback/index.js");

require.alias("gsmcwhirter-all/index.js", "dynamics-visualization/deps/all/index.js");

require.alias("gsmcwhirter-dynamics/index.js", "dynamics-visualization/deps/dynamics/index.js");
require.alias("gsmcwhirter-dynamics/util.js", "dynamics-visualization/deps/dynamics/util.js");
require.alias("gsmcwhirter-dynamics/generator.js", "dynamics-visualization/deps/dynamics/generator.js");
require.alias("gsmcwhirter-dynamics/continuous.js", "dynamics-visualization/deps/dynamics/continuous.js");
require.alias("gsmcwhirter-dynamics/discrete.js", "dynamics-visualization/deps/dynamics/discrete.js");
require.alias("gsmcwhirter-dynamics/bestresponse.js", "dynamics-visualization/deps/dynamics/bestresponse.js");
require.alias("gsmcwhirter-dynamics/brcurves.js", "dynamics-visualization/deps/dynamics/brcurves.js");
require.alias("gsmcwhirter-dynamics/vectors.js", "dynamics-visualization/deps/dynamics/vectors.js");
require.alias("component-emitter/index.js", "gsmcwhirter-dynamics/deps/emitter/index.js");

require.alias("component-inherit/index.js", "gsmcwhirter-dynamics/deps/inherit/index.js");

require.alias("segmentio-extend/index.js", "gsmcwhirter-dynamics/deps/extend/index.js");


require.alias("component-clone/index.js", "dynamics-visualization/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");


require.alias("component-dom/index.js", "dynamics-visualization/deps/dom/index.js");
require.alias("component-type/index.js", "component-dom/deps/type/index.js");

require.alias("component-event/index.js", "component-dom/deps/event/index.js");

require.alias("component-delegate/index.js", "component-dom/deps/delegate/index.js");
require.alias("component-matches-selector/index.js", "component-delegate/deps/matches-selector/index.js");

require.alias("component-event/index.js", "component-delegate/deps/event/index.js");

require.alias("component-indexof/index.js", "component-dom/deps/indexof/index.js");

require.alias("component-domify/index.js", "component-dom/deps/domify/index.js");

require.alias("component-classes/index.js", "component-dom/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-css/index.js", "component-dom/deps/css/index.js");

require.alias("component-sort/index.js", "component-dom/deps/sort/index.js");

require.alias("component-event/index.js", "dynamics-visualization/deps/event/index.js");

require.alias("component-each/index.js", "dynamics-visualization/deps/each/index.js");
require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-map/index.js", "dynamics-visualization/deps/map/index.js");
require.alias("component-to-function/index.js", "component-map/deps/to-function/index.js");

require.alias("component-select/index.js", "dynamics-visualization/deps/select/index.js");

require.alias("component-emitter/index.js", "dynamics-visualization/deps/emitter/index.js");

require.alias("component-indexof/index.js", "dynamics-visualization/deps/indexof/index.js");

require.alias("component-simplify/index.js", "dynamics-visualization/deps/simplify/index.js");

require.alias("component-autoscale-canvas/index.js", "dynamics-visualization/deps/autoscale-canvas/index.js");

require.alias("paulmillr-console-polyfill/index.js", "dynamics-visualization/deps/console-polyfill/index.js");

