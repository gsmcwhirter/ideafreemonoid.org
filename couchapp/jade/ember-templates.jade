script(type="text/x-handlebars", data-template-name="blog")
  .actions
    {{view Blog.AddPostLink}}
  ol.posts
    {{#each postsArray}}
    li
      {{view Blog.BlogPostView contentBinding="this" classBinding="isDraft:blog-draft"}}
    {{/each}}
  {{#if hasManyPages}}
  .pagination
    a(href="#!blog/1") &laquo;first
    {{#each pagesLinkData}}
    | <a {{bindAttr href="pageHref"}}>{{page}}</a>
    {{/each}}
    <a {{bindAttr href="lastHref"}}>last&raquo;</a>
  {{/if}}

script(type="text/x-handlebars", data-template-name="blog-add-post-link")
  {{#if currentUser.is_connected}}
  a(href="#") Add New Post
  {{/if}}

script(type="text/x-handlebars", data-template-name="blog-post")
  {{view Blog.EditFormView contentBinding="content" classBinding="content.isEditing:editing-form"}}
  {{view Blog.PostDisplayView contentBinding="content" showCommentsBinding="showComments" classBinding="content.isEditing:editing-display"}}

script(type="text/x-handlebars", data-template-name="blog-post-display")
  h2
    | <a {{bindAttr href="content.permalink"}}>{{content.title}}</a>
  .byline Posted {{content.formattedDate}} by {{{content.formattedAuthors}}}
  .tagline Tags: {{{content.formattedTags}}}
  .content {{{content.formattedContent}}}
  .editline
    {{content.editString}}
  .comments
    {{#if showComments}}
    .disqus_thread_placeholder
    a.dsq-brlink(href="http://disqus.com")
      | blog comments powered by
      span.logo-disqus Disqus
    {{else}}
    | <a {{bindAttr href="content.commentlink"}} {{bindAttr data-disqus-identifier="content.slug"}}>comments</a>
    {{/if}}

script(type="text/x-handlebars", data-template-name="blog-post-form")
  form
    label Title
    {{view Ember.TextField name="title" valueBinding="content.title" class="title"}}
    label Tags
    {{view Ember.TextField name="tagString" valueBinding="content.tagString"}}
    label Content
    {{view Ember.TextArea name="content_raw" valueBinding="content.content_raw"}}
    {{#view saveButton contentBinding="content"}}Save{{/view}}
    {{#unless content.is_published}}
    {{#view publishButton contentBinding="content"}}Publish{{/view}}
    {{/unless}}

script(type="text/x-handlebars", data-template-name="cv")
  ol.sections
    {{#each CV.sectionsController.contentSorted}}
    li
      {{view CV.SectionView contentBinding="this"}}
    {{/each}}
  .actions
    {{view CV.AddSectionLink}}

script(type="text/x-handlebars", data-template-name="cv-section")
  .cvsection
    {{view CV.EditFormView contentBinding="content" classBinding="content.isEditing:editing-form"}}
    {{view CV.SectionDisplayView contentBinding="content" classBinding="content.isEditing:editing-display"}}

script(type="text/x-handlebars", data-template-name="cv-section-display")
  h2 {{content.title}}
  .content {{{content.formattedContent}}}
  .updated Last updated {{content.formattedDate}}

script(type="text/x-handlebars", data-template-name="cv-section-form")
  form
    label Title
    {{view Ember.TextField name="title" valueBinding="content.title" class="title"}}
    label Content
    {{view Ember.TextArea name="content_raw" valueBinding="content.content_raw"}}
    {{#view saveButton contentBinding="content"}}Save{{/view}}

script(type="text/x-handlebars", data-template-name="cv-add-section-link")
  {{#if currentUser.is_connected}}
  a(href="#") Add New Section
  {{/if}}

script(type="text/x-handlebars", data-template-name="user")
  {{#if currentUser.is_connected}}
  {{view userLogoutView currentUserBinding="currentUser"}}
  {{else}}
  {{view userLoginView currentUserBinding="currentUser"}}
  {{/if}}

script(type="text/x-handlebars", data-template-name="user-login")
  {{view usernameView id="login-username" name="username"}}
  {{view passwordView id="login-password" name="password"}}
  {{#view loginButton}}Log In{{/view}}

script(type="text/x-handlebars", data-template-name="user-logout")
  {{currentUser.name}}
  {{#view User.LogoutButton}}Log Out{{/view}}

script(type="text/x-handlebars", data-template-name="buildset-list")
  ol.buildsets
    {{#each buildsets}}
    {{view Gametheory.BuildsetView contentBinding="this"}}
    {{/each}}

script(type="text/x-handlebars", data-template-name="buildset")
  h2 {{content.packageName}}
  .description
    {{{content.formattedDescription}}}
  dl.info
    dt License:
    dd
      {{{content.formattedLicense}}}
    dt Last Successful Build:
    {{#if content.hasSuccessfulBuild}}
    dd
      | <a {{bindAttr href="content.lastSuccessfulBuildLink"}}>v{{content.lastSuccessfulBuild.version}} build {{content.lastSuccessfulBuild.build}}</a> on {{content.lastSuccessfulBuildDate}}
    {{else}}
    dd
      | never
    {{/if}}
    {{#if content.hasClassifiers}}
    dt Classification:
    dd
      ul
        {{#each content.classifiers}}
        {{view Gametheory.ClassifierView contentBinding="this"}}
        {{/each}}
    {{/if}}
    dt Recent Builds:
    dd
      ol.builds
        {{#if onlyOneBuildset}}
        {{#each content.allFormattedBuilds}}
        {{view Gametheory.BuildView contentBinding="this" onlyOneBuildsetBinding="onlyOneBuildset"}}
        {{/each}}
        {{else}}
        {{#each content.shortFormattedBuilds}}
        {{view Gametheory.BuildView contentBinding="this" onlyOneBuildsetBinding="onlyOneBuildset"}}
        {{/each}}
        li
          | <a {{bindAttr href="content.permalink"}}>all builds</a>
        {{/if}}

script(type="text/x-handlebars", data-template-name="build")
  {{#if onlyOneBuildset}}
  | <dl {{bindAttr id="content.dlid"}}>
  {{else}}
  | <dl>
  {{/if}}
  {{#if content.version}}
  dt Build:
  dd v{{content.version}} build {{content.build}}
  {{/if}}
  dt Build Date:
  dd {{content.date}}
  dt Build Status:
  dd.build-status
    | <span {{bindAttr class="content.successful:build-success"}}>{{content.status}}</span>
  {{#if content.successful}}
  dt Download Link:
  dd
    | <a {{bindAttr href="content.downloadLink"}}>{{content.download_file}}</a>
  {{/if}}
  | </dl>

script(type="text/x-handlebars", data-template-name="classifier")
  {{content}}